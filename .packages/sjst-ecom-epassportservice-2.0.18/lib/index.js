"use strict";
//
// Autogenerated by Thrifthub (https://thrifthub.sankuai.com)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
Object.defineProperty(exports, "__esModule", { value: true });
exports.BizAccountThirdThriftServiceModel = exports.EPassportEcomAuditService = exports.BizOauthLoginThriftService = exports.BizAccountThirdThriftService = exports.BizAccountPhoneInfoThriftService = exports.BizAccountPartThriftService = exports.BizAccountOperationInfoService = exports.BizAccountInfoThriftService = exports.BizAccountBgThriftService = exports.BizAccountAdminThriftService = exports.BatchTaskService = exports.AppConfigThriftService = void 0;
const path = require("path");
const fs = require("fs");
const thrift_1 = require("@mtfe/thrift");
/**
* @ignore
*/
function structGenerator(params, meta) {
    if (!params)
        return params;
    const { namespace, name } = meta;
    const fields = this.meta[namespace][name];
    const Entity = this._require(`./thrift/${namespace}_types`)[name];
    return new Entity(fields.reduce((object, field) => {
        object[field.name] = fieldGenerator.call(this, params[field.name], field);
        return object;
    }, {}));
}
/**
* @ignore
*/
function fieldGenerator(params, field) {
    if (params === undefined)
        return undefined;
    if (params === null)
        return null;
    if (field.type === 'base') {
        return params;
    }
    if (field.type === 'struct') {
        return structGenerator.call(this, params, field.valueDefinition);
    }
    if (field.type === 'map') {
        return Object.entries(params).reduce((object, [key, value]) => {
            object[fieldGenerator.call(this, key, field.keyType)] = fieldGenerator.call(this, value, field.valueType);
            return object;
        }, {});
    }
    if (field.type === 'array') {
        if (!Array.isArray(params))
            throw new Error(`${field.name} is not an array`);
        return params.map(item => fieldGenerator.call(this, item, field.valueType));
    }
}
/**
* @ignore
*/
function argsGeneratorFactory(params, meta) {
    const { namespace, name } = meta;
    const fields = this.meta[namespace][name];
    return fields.map(field => fieldGenerator.call(this, params[field.name], field));
}
/**
* @ignore
*/
function requestFactory(appkey, serviceName, options, params, meta) {
    if (this._request) {
        return this._request({
            appkey,
            name: options.methodName,
            serviceName,
            params,
            options,
        }, (opts) => this.client.exec(this.Service, Object.assign(Object.assign({}, options), opts), ...this.argsGenerator(params, meta)));
    }
    return this.client.exec(this.Service, options, ...this.argsGenerator(params, meta));
}
/**
* @ignore
*/
function requireFactory(typeFilePath, file) {
    if (fs.existsSync(path.join(__dirname, file.concat('.js'))))
        return require(file);
    return require(typeFilePath);
}
/**
* @ignore
*/
function _method(methodName, meta, params, options) {
    if (this._mock && this._mock[methodName]) {
        return Promise.resolve(this._mock[methodName](params, options));
    }
    return this.request(Object.assign({ methodName }, options), params, meta);
}
class AppConfigThriftService {
    constructor(options) {
        /**
        * @ignore
        */
        this.Service = require('./thrift/AppConfigThriftService');
        /**
        * @ignore
        */
        this.client = null;
        /**
        * @ignore
        */
        this._request = null;
        /**
        * @ignore
        */
        this._mock = null;
        /**
        * @ignore
        */
        this._require = null;
        /**
        * @ignore
        */
        this.request = null;
        /**
        * @ignore
        */
        this.meta = null;
        /**
        * @ignore
        */
        this.argsGenerator = null;
        this.client = options.client || new thrift_1.ThriftPool(Object.assign({ localAppKey: options.appkey, remoteAppKey: 'com.sankuai.sjst.ecom.epassportservice', retry: 0, timeout: 5000, unified: true, ports: [], serviceName: 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.AppConfigThriftService' }, (options.thriftOptions || {})));
        this._request = options.request;
        this._mock = options.mock;
        this._require = requireFactory.bind(this, './thrift/AppConfigThriftService_types');
        this.request = requestFactory.bind(this, 'com.sankuai.sjst.ecom.epassportservice', 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.AppConfigThriftService');
        this.meta = metas;
        this.argsGenerator = argsGeneratorFactory.bind(this);
    }
    getAppConfigByAppKey(params, options) {
        return _method.call(this, 'getAppConfigByAppKey', { "namespace": "AppConfigThriftService", "name": "getAppConfigByAppKey_args" }, params, options);
    }
    batchGetAppConfigByAppKeyList(params, options) {
        return _method.call(this, 'batchGetAppConfigByAppKeyList', { "namespace": "AppConfigThriftService", "name": "batchGetAppConfigByAppKeyList_args" }, params, options);
    }
    getAppkeysByOctoAppkey(params, options) {
        return _method.call(this, 'getAppkeysByOctoAppkey', { "namespace": "AppConfigThriftService", "name": "getAppkeysByOctoAppkey_args" }, params, options);
    }
    batchGetAppkeysByOctoAppkey(params, options) {
        return _method.call(this, 'batchGetAppkeysByOctoAppkey', { "namespace": "AppConfigThriftService", "name": "batchGetAppkeysByOctoAppkey_args" }, params, options);
    }
    listAppKey(params, options) {
        return _method.call(this, 'listAppKey', { "namespace": "AppConfigThriftService", "name": "listAppKey_args" }, {}, options);
    }
    getEcomAuthByAppkey(params, options) {
        return _method.call(this, 'getEcomAuthByAppkey', { "namespace": "AppConfigThriftService", "name": "getEcomAuthByAppkey_args" }, params, options);
    }
    getEcomAuthByOctoAppkey(params, options) {
        return _method.call(this, 'getEcomAuthByOctoAppkey', { "namespace": "AppConfigThriftService", "name": "getEcomAuthByOctoAppkey_args" }, params, options);
    }
    modifyAppKey(params, options) {
        return _method.call(this, 'modifyAppKey', { "namespace": "AppConfigThriftService", "name": "modifyAppKey_args" }, params, options);
    }
    createAppKey(params, options) {
        return _method.call(this, 'createAppKey', { "namespace": "AppConfigThriftService", "name": "createAppKey_args" }, params, options);
    }
    searchContinuesByAppkey(params, options) {
        return _method.call(this, 'searchContinuesByAppkey', { "namespace": "AppConfigThriftService", "name": "searchContinuesByAppkey_args" }, params, options);
    }
    getContinueByIds(params, options) {
        return _method.call(this, 'getContinueByIds', { "namespace": "AppConfigThriftService", "name": "getContinueByIds_args" }, params, options);
    }
    addEcomContinue(params, options) {
        return _method.call(this, 'addEcomContinue', { "namespace": "AppConfigThriftService", "name": "addEcomContinue_args" }, params, options);
    }
    modifyEcomContinue(params, options) {
        return _method.call(this, 'modifyEcomContinue', { "namespace": "AppConfigThriftService", "name": "modifyEcomContinue_args" }, params, options);
    }
    modifySingleEcomContinue(params, options) {
        return _method.call(this, 'modifySingleEcomContinue', { "namespace": "AppConfigThriftService", "name": "modifySingleEcomContinue_args" }, params, options);
    }
    deleteEcomContinue(params, options) {
        return _method.call(this, 'deleteEcomContinue', { "namespace": "AppConfigThriftService", "name": "deleteEcomContinue_args" }, params, options);
    }
    getAppkeyPartTypes(params, options) {
        return _method.call(this, 'getAppkeyPartTypes', { "namespace": "AppConfigThriftService", "name": "getAppkeyPartTypes_args" }, params, options);
    }
    saveMisAppKeys(params, options) {
        return _method.call(this, 'saveMisAppKeys', { "namespace": "AppConfigThriftService", "name": "saveMisAppKeys_args" }, params, options);
    }
    grantMisAppKey(params, options) {
        return _method.call(this, 'grantMisAppKey', { "namespace": "AppConfigThriftService", "name": "grantMisAppKey_args" }, params, options);
    }
    getMisAppkeys(params, options) {
        return _method.call(this, 'getMisAppkeys', { "namespace": "AppConfigThriftService", "name": "getMisAppkeys_args" }, params, options);
    }
    getGrantMis(params, options) {
        return _method.call(this, 'getGrantMis', { "namespace": "AppConfigThriftService", "name": "getGrantMis_args" }, params, options);
    }
    searchEcomAuth(params, options) {
        return _method.call(this, 'searchEcomAuth', { "namespace": "AppConfigThriftService", "name": "searchEcomAuth_args" }, params, options);
    }
    batchGetGrantMis(params, options) {
        return _method.call(this, 'batchGetGrantMis', { "namespace": "AppConfigThriftService", "name": "batchGetGrantMis_args" }, params, options);
    }
    getFeConfig(params, options) {
        return _method.call(this, 'getFeConfig', { "namespace": "AppConfigThriftService", "name": "getFeConfig_args" }, params, options);
    }
}
exports.AppConfigThriftService = AppConfigThriftService;
class BatchTaskService {
    constructor(options) {
        /**
        * @ignore
        */
        this.Service = require('./thrift/BatchTaskService');
        /**
        * @ignore
        */
        this.client = null;
        /**
        * @ignore
        */
        this._request = null;
        /**
        * @ignore
        */
        this._mock = null;
        /**
        * @ignore
        */
        this._require = null;
        /**
        * @ignore
        */
        this.request = null;
        /**
        * @ignore
        */
        this.meta = null;
        /**
        * @ignore
        */
        this.argsGenerator = null;
        this.client = options.client || new thrift_1.ThriftPool(Object.assign({ localAppKey: options.appkey, remoteAppKey: 'com.sankuai.sjst.ecom.epassportservice', retry: 0, timeout: 5000, unified: true, ports: [], serviceName: 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BatchTaskService' }, (options.thriftOptions || {})));
        this._request = options.request;
        this._mock = options.mock;
        this._require = requireFactory.bind(this, './thrift/BatchTaskService_types');
        this.request = requestFactory.bind(this, 'com.sankuai.sjst.ecom.epassportservice', 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BatchTaskService');
        this.meta = metas;
        this.argsGenerator = argsGeneratorFactory.bind(this);
    }
    create(params, options) {
        return _method.call(this, 'create', { "namespace": "BatchTaskService", "name": "create_args" }, params, options);
    }
    modify(params, options) {
        return _method.call(this, 'modify', { "namespace": "BatchTaskService", "name": "modify_args" }, params, options);
    }
    getBatchTaskByTaskId(params, options) {
        return _method.call(this, 'getBatchTaskByTaskId', { "namespace": "BatchTaskService", "name": "getBatchTaskByTaskId_args" }, params, options);
    }
}
exports.BatchTaskService = BatchTaskService;
class BizAccountAdminThriftService {
    constructor(options) {
        /**
        * @ignore
        */
        this.Service = require('./thrift/BizAccountAdminThriftService');
        /**
        * @ignore
        */
        this.client = null;
        /**
        * @ignore
        */
        this._request = null;
        /**
        * @ignore
        */
        this._mock = null;
        /**
        * @ignore
        */
        this._require = null;
        /**
        * @ignore
        */
        this.request = null;
        /**
        * @ignore
        */
        this.meta = null;
        /**
        * @ignore
        */
        this.argsGenerator = null;
        this.client = options.client || new thrift_1.ThriftPool(Object.assign({ localAppKey: options.appkey, remoteAppKey: 'com.sankuai.sjst.ecom.epassportservice', retry: 0, timeout: 5000, unified: true, ports: [], serviceName: 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountAdminThriftService' }, (options.thriftOptions || {})));
        this._request = options.request;
        this._mock = options.mock;
        this._require = requireFactory.bind(this, './thrift/BizAccountAdminThriftService_types');
        this.request = requestFactory.bind(this, 'com.sankuai.sjst.ecom.epassportservice', 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountAdminThriftService');
        this.meta = metas;
        this.argsGenerator = argsGeneratorFactory.bind(this);
    }
    logoutByToken(params, options) {
        return _method.call(this, 'logoutByToken', { "namespace": "BizAccountAdminThriftService", "name": "logoutByToken_args" }, params, options);
    }
    logoutOtherByToken(params, options) {
        return _method.call(this, 'logoutOtherByToken', { "namespace": "BizAccountAdminThriftService", "name": "logoutOtherByToken_args" }, params, options);
    }
    logoutByBizAccount(params, options) {
        return _method.call(this, 'logoutByBizAccount', { "namespace": "BizAccountAdminThriftService", "name": "logoutByBizAccount_args" }, params, options);
    }
    logoutByBizToken(params, options) {
        return _method.call(this, 'logoutByBizToken', { "namespace": "BizAccountAdminThriftService", "name": "logoutByBizToken_args" }, params, options);
    }
    logoutByPos(params, options) {
        return _method.call(this, 'logoutByPos', { "namespace": "BizAccountAdminThriftService", "name": "logoutByPos_args" }, params, options);
    }
    createToken(params, options) {
        return _method.call(this, 'createToken', { "namespace": "BizAccountAdminThriftService", "name": "createToken_args" }, params, options);
    }
    refreshToken(params, options) {
        return _method.call(this, 'refreshToken', { "namespace": "BizAccountAdminThriftService", "name": "refreshToken_args" }, params, options);
    }
    generateRandomPassword(params, options) {
        return _method.call(this, 'generateRandomPassword', { "namespace": "BizAccountAdminThriftService", "name": "generateRandomPassword_args" }, params, options);
    }
    createBizAccount(params, options) {
        return _method.call(this, 'createBizAccount', { "namespace": "BizAccountAdminThriftService", "name": "createBizAccount_args" }, params, options);
    }
    batchCreateBizAccount(params, options) {
        return _method.call(this, 'batchCreateBizAccount', { "namespace": "BizAccountAdminThriftService", "name": "batchCreateBizAccount_args" }, params, options);
    }
    createBizAccountEmail(params, options) {
        return _method.call(this, 'createBizAccountEmail', { "namespace": "BizAccountAdminThriftService", "name": "createBizAccountEmail_args" }, params, options);
    }
    modifyBizAccount(params, options) {
        return _method.call(this, 'modifyBizAccount', { "namespace": "BizAccountAdminThriftService", "name": "modifyBizAccount_args" }, params, options);
    }
    modifyBizAccountOp(params, options) {
        return _method.call(this, 'modifyBizAccountOp', { "namespace": "BizAccountAdminThriftService", "name": "modifyBizAccountOp_args" }, params, options);
    }
    unbindMobile(params, options) {
        return _method.call(this, 'unbindMobile', { "namespace": "BizAccountAdminThriftService", "name": "unbindMobile_args" }, params, options);
    }
    modifyBizAccountLogin(params, options) {
        return _method.call(this, 'modifyBizAccountLogin', { "namespace": "BizAccountAdminThriftService", "name": "modifyBizAccountLogin_args" }, params, options);
    }
    modifyBizAccountLoginV2(params, options) {
        return _method.call(this, 'modifyBizAccountLoginV2', { "namespace": "BizAccountAdminThriftService", "name": "modifyBizAccountLoginV2_args" }, params, options);
    }
    enableBizAccount(params, options) {
        return _method.call(this, 'enableBizAccount', { "namespace": "BizAccountAdminThriftService", "name": "enableBizAccount_args" }, params, options);
    }
    enableBizAccountV2(params, options) {
        return _method.call(this, 'enableBizAccountV2', { "namespace": "BizAccountAdminThriftService", "name": "enableBizAccountV2_args" }, params, options);
    }
    batchEnableBizAccount(params, options) {
        return _method.call(this, 'batchEnableBizAccount', { "namespace": "BizAccountAdminThriftService", "name": "batchEnableBizAccount_args" }, params, options);
    }
    createBsidToken(params, options) {
        return _method.call(this, 'createBsidToken', { "namespace": "BizAccountAdminThriftService", "name": "createBsidToken_args" }, params, options);
    }
    checkLoginValid(params, options) {
        return _method.call(this, 'checkLoginValid', { "namespace": "BizAccountAdminThriftService", "name": "checkLoginValid_args" }, params, options);
    }
    checkLoginRepetition(params, options) {
        return _method.call(this, 'checkLoginRepetition', { "namespace": "BizAccountAdminThriftService", "name": "checkLoginRepetition_args" }, params, options);
    }
    modifyBizAccountLoginOnlyForSdk(params, options) {
        return _method.call(this, 'modifyBizAccountLoginOnlyForSdk', { "namespace": "BizAccountAdminThriftService", "name": "modifyBizAccountLoginOnlyForSdk_args" }, params, options);
    }
    modifyBizEmail(params, options) {
        return _method.call(this, 'modifyBizEmail', { "namespace": "BizAccountAdminThriftService", "name": "modifyBizEmail_args" }, params, options);
    }
    modifyBizAcctActive(params, options) {
        return _method.call(this, 'modifyBizAcctActive', { "namespace": "BizAccountAdminThriftService", "name": "modifyBizAcctActive_args" }, params, options);
    }
    getBizAccountActiveByID(params, options) {
        return _method.call(this, 'getBizAccountActiveByID', { "namespace": "BizAccountAdminThriftService", "name": "getBizAccountActiveByID_args" }, params, options);
    }
    getBizAcctActiveOriginByID(params, options) {
        return _method.call(this, 'getBizAcctActiveOriginByID', { "namespace": "BizAccountAdminThriftService", "name": "getBizAcctActiveOriginByID_args" }, params, options);
    }
    checkPasswordLegal(params, options) {
        return _method.call(this, 'checkPasswordLegal', { "namespace": "BizAccountAdminThriftService", "name": "checkPasswordLegal_args" }, params, options);
    }
    createUniToken(params, options) {
        return _method.call(this, 'createUniToken', { "namespace": "BizAccountAdminThriftService", "name": "createUniToken_args" }, params, options);
    }
}
exports.BizAccountAdminThriftService = BizAccountAdminThriftService;
class BizAccountBgThriftService {
    constructor(options) {
        /**
        * @ignore
        */
        this.Service = require('./thrift/BizAccountBgThriftService');
        /**
        * @ignore
        */
        this.client = null;
        /**
        * @ignore
        */
        this._request = null;
        /**
        * @ignore
        */
        this._mock = null;
        /**
        * @ignore
        */
        this._require = null;
        /**
        * @ignore
        */
        this.request = null;
        /**
        * @ignore
        */
        this.meta = null;
        /**
        * @ignore
        */
        this.argsGenerator = null;
        this.client = options.client || new thrift_1.ThriftPool(Object.assign({ localAppKey: options.appkey, remoteAppKey: 'com.sankuai.sjst.ecom.epassportservice', retry: 0, timeout: 5000, unified: true, ports: [], serviceName: 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountBgThriftService' }, (options.thriftOptions || {})));
        this._request = options.request;
        this._mock = options.mock;
        this._require = requireFactory.bind(this, './thrift/BizAccountBgThriftService_types');
        this.request = requestFactory.bind(this, 'com.sankuai.sjst.ecom.epassportservice', 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountBgThriftService');
        this.meta = metas;
        this.argsGenerator = argsGeneratorFactory.bind(this);
    }
    filterBizAccountByBgSource(params, options) {
        return _method.call(this, 'filterBizAccountByBgSource', { "namespace": "BizAccountBgThriftService", "name": "filterBizAccountByBgSource_args" }, params, options);
    }
    filterBizAccountByBgSources(params, options) {
        return _method.call(this, 'filterBizAccountByBgSources', { "namespace": "BizAccountBgThriftService", "name": "filterBizAccountByBgSources_args" }, params, options);
    }
    bind(params, options) {
        return _method.call(this, 'bind', { "namespace": "BizAccountBgThriftService", "name": "bind_args" }, params, options);
    }
    searchBizAccountInBg(params, options) {
        return _method.call(this, 'searchBizAccountInBg', { "namespace": "BizAccountBgThriftService", "name": "searchBizAccountInBg_args" }, params, options);
    }
    searchBizAccountBg(params, options) {
        return _method.call(this, 'searchBizAccountBg', { "namespace": "BizAccountBgThriftService", "name": "searchBizAccountBg_args" }, params, options);
    }
    unbind(params, options) {
        return _method.call(this, 'unbind', { "namespace": "BizAccountBgThriftService", "name": "unbind_args" }, params, options);
    }
}
exports.BizAccountBgThriftService = BizAccountBgThriftService;
class BizAccountInfoThriftService {
    constructor(options) {
        /**
        * @ignore
        */
        this.Service = require('./thrift/BizAccountInfoThriftService');
        /**
        * @ignore
        */
        this.client = null;
        /**
        * @ignore
        */
        this._request = null;
        /**
        * @ignore
        */
        this._mock = null;
        /**
        * @ignore
        */
        this._require = null;
        /**
        * @ignore
        */
        this.request = null;
        /**
        * @ignore
        */
        this.meta = null;
        /**
        * @ignore
        */
        this.argsGenerator = null;
        this.client = options.client || new thrift_1.ThriftPool(Object.assign({ localAppKey: options.appkey, remoteAppKey: 'com.sankuai.sjst.ecom.epassportservice', retry: 0, timeout: 5000, unified: true, ports: [], serviceName: 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountInfoThriftService' }, (options.thriftOptions || {})));
        this._request = options.request;
        this._mock = options.mock;
        this._require = requireFactory.bind(this, './thrift/BizAccountInfoThriftService_types');
        this.request = requestFactory.bind(this, 'com.sankuai.sjst.ecom.epassportservice', 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountInfoThriftService');
        this.meta = metas;
        this.argsGenerator = argsGeneratorFactory.bind(this);
    }
    validateToken(params, options) {
        return _method.call(this, 'validateToken', { "namespace": "BizAccountInfoThriftService", "name": "validateToken_args" }, params, options);
    }
    decryptToken(params, options) {
        return _method.call(this, 'decryptToken', { "namespace": "BizAccountInfoThriftService", "name": "decryptToken_args" }, params, options);
    }
    checkPasswordByToken(params, options) {
        return _method.call(this, 'checkPasswordByToken', { "namespace": "BizAccountInfoThriftService", "name": "checkPasswordByToken_args" }, params, options);
    }
    checkPasswordByID(params, options) {
        return _method.call(this, 'checkPasswordByID', { "namespace": "BizAccountInfoThriftService", "name": "checkPasswordByID_args" }, params, options);
    }
    checkPasswordByDpID(params, options) {
        return _method.call(this, 'checkPasswordByDpID', { "namespace": "BizAccountInfoThriftService", "name": "checkPasswordByDpID_args" }, params, options);
    }
    getBizAccountByToken(params, options) {
        return _method.call(this, 'getBizAccountByToken', { "namespace": "BizAccountInfoThriftService", "name": "getBizAccountByToken_args" }, params, options);
    }
    getBizAccountByID(params, options) {
        return _method.call(this, 'getBizAccountByID', { "namespace": "BizAccountInfoThriftService", "name": "getBizAccountByID_args" }, params, options);
    }
    getBizAccountByDpID(params, options) {
        return _method.call(this, 'getBizAccountByDpID', { "namespace": "BizAccountInfoThriftService", "name": "getBizAccountByDpID_args" }, params, options);
    }
    getBizAccountByLogin(params, options) {
        return _method.call(this, 'getBizAccountByLogin', { "namespace": "BizAccountInfoThriftService", "name": "getBizAccountByLogin_args" }, params, options);
    }
    getAllBizAccountsByLogin(params, options) {
        return _method.call(this, 'getAllBizAccountsByLogin', { "namespace": "BizAccountInfoThriftService", "name": "getAllBizAccountsByLogin_args" }, params, options);
    }
    batchGetBizAccountByIDList(params, options) {
        return _method.call(this, 'batchGetBizAccountByIDList', { "namespace": "BizAccountInfoThriftService", "name": "batchGetBizAccountByIDList_args" }, params, options);
    }
    batchGetBizAccountByDpIDList(params, options) {
        return _method.call(this, 'batchGetBizAccountByDpIDList', { "namespace": "BizAccountInfoThriftService", "name": "batchGetBizAccountByDpIDList_args" }, params, options);
    }
    searchBizAccountByPhone(params, options) {
        return _method.call(this, 'searchBizAccountByPhone', { "namespace": "BizAccountInfoThriftService", "name": "searchBizAccountByPhone_args" }, params, options);
    }
    searchBizAccountByPartTO(params, options) {
        return _method.call(this, 'searchBizAccountByPartTO', { "namespace": "BizAccountInfoThriftService", "name": "searchBizAccountByPartTO_args" }, params, options);
    }
    queryBizSensitive(params, options) {
        return _method.call(this, 'queryBizSensitive', { "namespace": "BizAccountInfoThriftService", "name": "queryBizSensitive_args" }, params, options);
    }
    getBizAcctByEmail(params, options) {
        return _method.call(this, 'getBizAcctByEmail', { "namespace": "BizAccountInfoThriftService", "name": "getBizAcctByEmail_args" }, params, options);
    }
    getBizAcctEmailByToken(params, options) {
        return _method.call(this, 'getBizAcctEmailByToken', { "namespace": "BizAccountInfoThriftService", "name": "getBizAcctEmailByToken_args" }, params, options);
    }
    decryptUniToken(params, options) {
        return _method.call(this, 'decryptUniToken', { "namespace": "BizAccountInfoThriftService", "name": "decryptUniToken_args" }, params, options);
    }
    getBizAccPhoneById(params, options) {
        return _method.call(this, 'getBizAccPhoneById', { "namespace": "BizAccountInfoThriftService", "name": "getBizAccPhoneById_args" }, params, options);
    }
    getThirdAcctInfoByBizAcctId(params, options) {
        return _method.call(this, 'getThirdAcctInfoByBizAcctId', { "namespace": "BizAccountInfoThriftService", "name": "getThirdAcctInfoByBizAcctId_args" }, params, options);
    }
}
exports.BizAccountInfoThriftService = BizAccountInfoThriftService;
class BizAccountOperationInfoService {
    constructor(options) {
        /**
        * @ignore
        */
        this.Service = require('./thrift/BizAccountOperationInfoService');
        /**
        * @ignore
        */
        this.client = null;
        /**
        * @ignore
        */
        this._request = null;
        /**
        * @ignore
        */
        this._mock = null;
        /**
        * @ignore
        */
        this._require = null;
        /**
        * @ignore
        */
        this.request = null;
        /**
        * @ignore
        */
        this.meta = null;
        /**
        * @ignore
        */
        this.argsGenerator = null;
        this.client = options.client || new thrift_1.ThriftPool(Object.assign({ localAppKey: options.appkey, remoteAppKey: 'com.sankuai.sjst.ecom.epassportservice', retry: 0, timeout: 5000, unified: true, ports: [], serviceName: 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountOperationInfoService' }, (options.thriftOptions || {})));
        this._request = options.request;
        this._mock = options.mock;
        this._require = requireFactory.bind(this, './thrift/BizAccountOperationInfoService_types');
        this.request = requestFactory.bind(this, 'com.sankuai.sjst.ecom.epassportservice', 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountOperationInfoService');
        this.meta = metas;
        this.argsGenerator = argsGeneratorFactory.bind(this);
    }
    searchBizAccountHistory(params, options) {
        return _method.call(this, 'searchBizAccountHistory', { "namespace": "BizAccountOperationInfoService", "name": "searchBizAccountHistory_args" }, params, options);
    }
    clearBizAcctCache(params, options) {
        return _method.call(this, 'clearBizAcctCache', { "namespace": "BizAccountOperationInfoService", "name": "clearBizAcctCache_args" }, params, options);
    }
}
exports.BizAccountOperationInfoService = BizAccountOperationInfoService;
class BizAccountPartThriftService {
    constructor(options) {
        /**
        * @ignore
        */
        this.Service = require('./thrift/BizAccountPartThriftService');
        /**
        * @ignore
        */
        this.client = null;
        /**
        * @ignore
        */
        this._request = null;
        /**
        * @ignore
        */
        this._mock = null;
        /**
        * @ignore
        */
        this._require = null;
        /**
        * @ignore
        */
        this.request = null;
        /**
        * @ignore
        */
        this.meta = null;
        /**
        * @ignore
        */
        this.argsGenerator = null;
        this.client = options.client || new thrift_1.ThriftPool(Object.assign({ localAppKey: options.appkey, remoteAppKey: 'com.sankuai.sjst.ecom.epassportservice', retry: 0, timeout: 5000, unified: true, ports: [], serviceName: 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountPartThriftService' }, (options.thriftOptions || {})));
        this._request = options.request;
        this._mock = options.mock;
        this._require = requireFactory.bind(this, './thrift/BizAccountPartThriftService_types');
        this.request = requestFactory.bind(this, 'com.sankuai.sjst.ecom.epassportservice', 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountPartThriftService');
        this.meta = metas;
        this.argsGenerator = argsGeneratorFactory.bind(this);
    }
    nextPartKeyFromPool(params, options) {
        return _method.call(this, 'nextPartKeyFromPool', { "namespace": "BizAccountPartThriftService", "name": "nextPartKeyFromPool_args" }, params, options);
    }
    addPartKeyToPool(params, options) {
        return _method.call(this, 'addPartKeyToPool', { "namespace": "BizAccountPartThriftService", "name": "addPartKeyToPool_args" }, params, options);
    }
}
exports.BizAccountPartThriftService = BizAccountPartThriftService;
class BizAccountPhoneInfoThriftService {
    constructor(options) {
        /**
        * @ignore
        */
        this.Service = require('./thrift/BizAccountPhoneInfoThriftService');
        /**
        * @ignore
        */
        this.client = null;
        /**
        * @ignore
        */
        this._request = null;
        /**
        * @ignore
        */
        this._mock = null;
        /**
        * @ignore
        */
        this._require = null;
        /**
        * @ignore
        */
        this.request = null;
        /**
        * @ignore
        */
        this.meta = null;
        /**
        * @ignore
        */
        this.argsGenerator = null;
        this.client = options.client || new thrift_1.ThriftPool(Object.assign({ localAppKey: options.appkey, remoteAppKey: 'com.sankuai.sjst.ecom.epassportservice', retry: 0, timeout: 5000, unified: true, ports: [], serviceName: 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountPhoneInfoThriftService' }, (options.thriftOptions || {})));
        this._request = options.request;
        this._mock = options.mock;
        this._require = requireFactory.bind(this, './thrift/BizAccountPhoneInfoThriftService_types');
        this.request = requestFactory.bind(this, 'com.sankuai.sjst.ecom.epassportservice', 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountPhoneInfoThriftService');
        this.meta = metas;
        this.argsGenerator = argsGeneratorFactory.bind(this);
    }
    getBizAccPhoneByIds(params, options) {
        return _method.call(this, 'getBizAccPhoneByIds', { "namespace": "BizAccountPhoneInfoThriftService", "name": "getBizAccPhoneByIds_args" }, params, options);
    }
    getBizAccPhoneByDpIds(params, options) {
        return _method.call(this, 'getBizAccPhoneByDpIds', { "namespace": "BizAccountPhoneInfoThriftService", "name": "getBizAccPhoneByDpIds_args" }, params, options);
    }
    getBizAccPhoneByIdsV2(params, options) {
        return _method.call(this, 'getBizAccPhoneByIdsV2', { "namespace": "BizAccountPhoneInfoThriftService", "name": "getBizAccPhoneByIdsV2_args" }, params, options);
    }
    getBizAccPhoneByDpIdsV2(params, options) {
        return _method.call(this, 'getBizAccPhoneByDpIdsV2', { "namespace": "BizAccountPhoneInfoThriftService", "name": "getBizAccPhoneByDpIdsV2_args" }, params, options);
    }
    getBizAcctPhoneByIds(params, options) {
        return _method.call(this, 'getBizAcctPhoneByIds', { "namespace": "BizAccountPhoneInfoThriftService", "name": "getBizAcctPhoneByIds_args" }, params, options);
    }
}
exports.BizAccountPhoneInfoThriftService = BizAccountPhoneInfoThriftService;
class BizAccountThirdThriftService {
    constructor(options) {
        /**
        * @ignore
        */
        this.Service = require('./thrift/BizAccountThirdThriftService');
        /**
        * @ignore
        */
        this.client = null;
        /**
        * @ignore
        */
        this._request = null;
        /**
        * @ignore
        */
        this._mock = null;
        /**
        * @ignore
        */
        this._require = null;
        /**
        * @ignore
        */
        this.request = null;
        /**
        * @ignore
        */
        this.meta = null;
        /**
        * @ignore
        */
        this.argsGenerator = null;
        this.client = options.client || new thrift_1.ThriftPool(Object.assign({ localAppKey: options.appkey, remoteAppKey: 'com.sankuai.sjst.ecom.epassportservice', retry: 0, timeout: 5000, unified: true, ports: [], serviceName: 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountThirdThriftService' }, (options.thriftOptions || {})));
        this._request = options.request;
        this._mock = options.mock;
        this._require = requireFactory.bind(this, './thrift/BizAccountThirdThriftService_types');
        this.request = requestFactory.bind(this, 'com.sankuai.sjst.ecom.epassportservice', 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizAccountThirdThriftService');
        this.meta = metas;
        this.argsGenerator = argsGeneratorFactory.bind(this);
    }
    binding(params, options) {
        return _method.call(this, 'binding', { "namespace": "BizAccountThirdThriftService", "name": "binding_args" }, params, options);
    }
    unBind(params, options) {
        return _method.call(this, 'unBind', { "namespace": "BizAccountThirdThriftService", "name": "unBind_args" }, params, options);
    }
    getThirdBindingInfo(params, options) {
        return _method.call(this, 'getThirdBindingInfo', { "namespace": "BizAccountThirdThriftService", "name": "getThirdBindingInfo_args" }, params, options);
    }
    saveThirdAcctInfo(params, options) {
        return _method.call(this, 'saveThirdAcctInfo', { "namespace": "BizAccountThirdThriftService", "name": "saveThirdAcctInfo_args" }, params, options);
    }
    follow(params, options) {
        return _method.call(this, 'follow', { "namespace": "BizAccountThirdThriftService", "name": "follow_args" }, params, options);
    }
    followV1(params, options) {
        return _method.call(this, 'followV1', { "namespace": "BizAccountThirdThriftService", "name": "followV1_args" }, params, options);
    }
    followBinding(params, options) {
        return _method.call(this, 'followBinding', { "namespace": "BizAccountThirdThriftService", "name": "followBinding_args" }, params, options);
    }
    followBindingV1(params, options) {
        return _method.call(this, 'followBindingV1', { "namespace": "BizAccountThirdThriftService", "name": "followBindingV1_args" }, params, options);
    }
    unFollow(params, options) {
        return _method.call(this, 'unFollow', { "namespace": "BizAccountThirdThriftService", "name": "unFollow_args" }, params, options);
    }
    getWeChatInfoByAcctId(params, options) {
        return _method.call(this, 'getWeChatInfoByAcctId', { "namespace": "BizAccountThirdThriftService", "name": "getWeChatInfoByAcctId_args" }, params, options);
    }
    getWeChatInfoByAcctIds(params, options) {
        return _method.call(this, 'getWeChatInfoByAcctIds', { "namespace": "BizAccountThirdThriftService", "name": "getWeChatInfoByAcctIds_args" }, params, options);
    }
    getWeChatInfoByOpenIds(params, options) {
        return _method.call(this, 'getWeChatInfoByOpenIds', { "namespace": "BizAccountThirdThriftService", "name": "getWeChatInfoByOpenIds_args" }, params, options);
    }
    getWeChatInfoByUnionIds(params, options) {
        return _method.call(this, 'getWeChatInfoByUnionIds', { "namespace": "BizAccountThirdThriftService", "name": "getWeChatInfoByUnionIds_args" }, params, options);
    }
    followBindingImport(params, options) {
        return _method.call(this, 'followBindingImport', { "namespace": "BizAccountThirdThriftService", "name": "followBindingImport_args" }, params, options);
    }
    followBindingImportV1(params, options) {
        return _method.call(this, 'followBindingImportV1', { "namespace": "BizAccountThirdThriftService", "name": "followBindingImportV1_args" }, params, options);
    }
}
exports.BizAccountThirdThriftService = BizAccountThirdThriftService;
class BizOauthLoginThriftService {
    constructor(options) {
        /**
        * @ignore
        */
        this.Service = require('./thrift/BizOauthLoginThriftService');
        /**
        * @ignore
        */
        this.client = null;
        /**
        * @ignore
        */
        this._request = null;
        /**
        * @ignore
        */
        this._mock = null;
        /**
        * @ignore
        */
        this._require = null;
        /**
        * @ignore
        */
        this.request = null;
        /**
        * @ignore
        */
        this.meta = null;
        /**
        * @ignore
        */
        this.argsGenerator = null;
        this.client = options.client || new thrift_1.ThriftPool(Object.assign({ localAppKey: options.appkey, remoteAppKey: 'com.sankuai.sjst.ecom.epassportservice', retry: 0, timeout: 5000, unified: true, ports: [], serviceName: 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizOauthLoginThriftService' }, (options.thriftOptions || {})));
        this._request = options.request;
        this._mock = options.mock;
        this._require = requireFactory.bind(this, './thrift/BizOauthLoginThriftService_types');
        this.request = requestFactory.bind(this, 'com.sankuai.sjst.ecom.epassportservice', 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.BizOauthLoginThriftService');
        this.meta = metas;
        this.argsGenerator = argsGeneratorFactory.bind(this);
    }
    acquireCode(params, options) {
        return _method.call(this, 'acquireCode', { "namespace": "BizOauthLoginThriftService", "name": "acquireCode_args" }, params, options);
    }
    exchangeToken(params, options) {
        return _method.call(this, 'exchangeToken', { "namespace": "BizOauthLoginThriftService", "name": "exchangeToken_args" }, params, options);
    }
    createBizOauthLogin(params, options) {
        return _method.call(this, 'createBizOauthLogin', { "namespace": "BizOauthLoginThriftService", "name": "createBizOauthLogin_args" }, params, options);
    }
    queryBizOauthLogins(params, options) {
        return _method.call(this, 'queryBizOauthLogins', { "namespace": "BizOauthLoginThriftService", "name": "queryBizOauthLogins_args" }, params, options);
    }
    updateBizOauthLogin(params, options) {
        return _method.call(this, 'updateBizOauthLogin', { "namespace": "BizOauthLoginThriftService", "name": "updateBizOauthLogin_args" }, params, options);
    }
}
exports.BizOauthLoginThriftService = BizOauthLoginThriftService;
class EPassportEcomAuditService {
    constructor(options) {
        /**
        * @ignore
        */
        this.Service = require('./thrift/EPassportEcomAuditService');
        /**
        * @ignore
        */
        this.client = null;
        /**
        * @ignore
        */
        this._request = null;
        /**
        * @ignore
        */
        this._mock = null;
        /**
        * @ignore
        */
        this._require = null;
        /**
        * @ignore
        */
        this.request = null;
        /**
        * @ignore
        */
        this.meta = null;
        /**
        * @ignore
        */
        this.argsGenerator = null;
        this.client = options.client || new thrift_1.ThriftPool(Object.assign({ localAppKey: options.appkey, remoteAppKey: 'com.sankuai.sjst.ecom.epassportservice', retry: 0, timeout: 5000, unified: true, ports: [], serviceName: 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.EPassportEcomAuditService' }, (options.thriftOptions || {})));
        this._request = options.request;
        this._mock = options.mock;
        this._require = requireFactory.bind(this, './thrift/EPassportEcomAuditService_types');
        this.request = requestFactory.bind(this, 'com.sankuai.sjst.ecom.epassportservice', 'com.sankuai.sjst.ecom.epassport.service.client.thrift.service.EPassportEcomAuditService');
        this.meta = metas;
        this.argsGenerator = argsGeneratorFactory.bind(this);
    }
    createEcomAudit(params, options) {
        return _method.call(this, 'createEcomAudit', { "namespace": "EPassportEcomAuditService", "name": "createEcomAudit_args" }, params, options);
    }
    queryEcomAuditList(params, options) {
        return _method.call(this, 'queryEcomAuditList', { "namespace": "EPassportEcomAuditService", "name": "queryEcomAuditList_args" }, params, options);
    }
    queryEcomAuditItem(params, options) {
        return _method.call(this, 'queryEcomAuditItem', { "namespace": "EPassportEcomAuditService", "name": "queryEcomAuditItem_args" }, params, options);
    }
    modifyEcomAudit(params, options) {
        return _method.call(this, 'modifyEcomAudit', { "namespace": "EPassportEcomAuditService", "name": "modifyEcomAudit_args" }, params, options);
    }
    createCustomerFindAudit(params, options) {
        return _method.call(this, 'createCustomerFindAudit', { "namespace": "EPassportEcomAuditService", "name": "createCustomerFindAudit_args" }, params, options);
    }
    queryCustomerFindAudit(params, options) {
        return _method.call(this, 'queryCustomerFindAudit', { "namespace": "EPassportEcomAuditService", "name": "queryCustomerFindAudit_args" }, params, options);
    }
    createModifyMobileAudit(params, options) {
        return _method.call(this, 'createModifyMobileAudit', { "namespace": "EPassportEcomAuditService", "name": "createModifyMobileAudit_args" }, params, options);
    }
    updateModifyMobileAudit(params, options) {
        return _method.call(this, 'updateModifyMobileAudit', { "namespace": "EPassportEcomAuditService", "name": "updateModifyMobileAudit_args" }, params, options);
    }
    queryModifyMobileAudit(params, options) {
        return _method.call(this, 'queryModifyMobileAudit', { "namespace": "EPassportEcomAuditService", "name": "queryModifyMobileAudit_args" }, params, options);
    }
}
exports.EPassportEcomAuditService = EPassportEcomAuditService;
/**
* @ignore
*/
const metas = { "AppConfigThriftServiceModel": { "EcomAuthFields": [{ "name": "id", "type": "base" }, { "name": "appkey", "type": "base" }, { "name": "appSecret", "type": "base" }, { "name": "desc", "type": "base" }, { "name": "author", "type": "base" }, { "name": "addTime", "type": "base" }, { "name": "modTime", "type": "base" }, { "name": "type", "type": "base" }, { "name": "appCode", "type": "base" }, { "name": "partnerCode", "type": "base" }, { "name": "octoAppkey", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "productName", "type": "base" }, { "name": "productAddress", "type": "base" }], "EcomContinueFields": [{ "name": "id", "type": "base" }, { "name": "url", "type": "base" }, { "name": "addTime", "type": "base" }, { "name": "modTime", "type": "base" }, { "name": "author", "type": "base" }, { "name": "authId", "type": "base" }], "EcomMiscFields": [{ "name": "partTypes", "type": "base" }], "AppConfigReq": [{ "name": "appkey", "type": "base" }, { "name": "ecomAuthFields", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomAuthFields" } }, { "name": "ecomContinueFields", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomContinueFields" } }, { "name": "ecomMiscFields", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomMiscFields" } }], "AppContinueTO": [{ "name": "appContinue", "type": "base" }], "EcomBasicAuthTO": [{ "name": "id", "type": "base" }, { "name": "appkey", "type": "base" }], "EcomAuthTO": [{ "name": "id", "type": "base" }, { "name": "appkey", "type": "base" }, { "name": "appSecret", "type": "base" }, { "name": "desc", "type": "base" }, { "name": "author", "type": "base" }, { "name": "addTime", "type": "base" }, { "name": "modTime", "type": "base" }, { "name": "type", "type": "base" }, { "name": "appCode", "type": "base" }, { "name": "partnerCode", "type": "base" }, { "name": "octoAppkey", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "productName", "type": "base" }, { "name": "productAddress", "type": "base" }], "EcomContinueTO": [{ "name": "id", "type": "base" }, { "name": "url", "type": "base" }, { "name": "addTime", "type": "base" }, { "name": "modTime", "type": "base" }, { "name": "author", "type": "base" }, { "name": "authId", "type": "base" }], "EcomMiscTO": [{ "name": "partTypes", "type": "array", "valueType": { "type": "base" } }], "AppConfigTO": [{ "name": "id", "type": "base" }, { "name": "appkey", "type": "base" }, { "name": "appSecret", "type": "base" }, { "name": "appContinues", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "AppContinueTO" } } }, { "name": "type", "type": "base" }, { "name": "appCode", "type": "base" }, { "name": "partnerCode", "type": "base" }, { "name": "ecomBasicAuthTO", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomBasicAuthTO" } }, { "name": "ecomAuthTO", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomAuthTO" } }, { "name": "ecomContinueTOs", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomContinueTO" } } }, { "name": "ecomMiscTO", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomMiscTO" } }], "AppConfigResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "appConfig", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "AppConfigTO" } }], "AppConfigFields": [{ "name": "id", "type": "base" }, { "name": "appkey", "type": "base" }, { "name": "appSecret", "type": "base" }, { "name": "appContinues", "type": "base" }, { "name": "type", "type": "base" }, { "name": "appCode", "type": "base" }, { "name": "partnerCode", "type": "base" }], "BatchAppConfigReq": [{ "name": "appkeyList", "type": "array", "valueType": { "type": "base" } }, { "name": "configFields", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "AppConfigFields" } }, { "name": "ecomAuthFields", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomAuthFields" } }, { "name": "ecomContinueFields", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomContinueFields" } }, { "name": "ecomMiscFields", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomMiscFields" } }], "BatchAppConfigResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "configMap", "type": "map", "keyType": { "type": "base" }, "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "AppConfigTO" } } }], "GetAppkeysReq": [{ "name": "octoAppkey", "type": "base" }], "GetAppkeysResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "appkeys", "type": "array", "valueType": { "type": "base" } }], "BatchGetAppkeysReq": [{ "name": "octoAppkeys", "type": "array", "valueType": { "type": "base" } }], "BatchGetAppkeysResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "appkeys", "type": "map", "keyType": { "type": "base" }, "valueType": { "type": "array", "valueType": { "type": "base" } } }], "ListAppKeyResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "ecomAuthTOs", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomAuthTO" } } }], "GetEcomAuthByKeywordReq": [{ "name": "keyword", "type": "base" }], "GetEcomAuthResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "ecomAuthTO", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomAuthTO" } }], "GetEcomAuthListResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "ecomAuthTO", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomAuthTO" } } }], "ModifyAppKeyReq": [{ "name": "ecomAuthTO", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomAuthTO" } }], "CreateAppKeyReq": [{ "name": "ecomAuthTO", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomAuthTO" } }], "SearchContinuesByAppkeyReq": [{ "name": "appkey", "type": "base" }], "SearchContinuesByAppkeyResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "ecomAuthTO", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomAuthTO" } }, { "name": "ecomContinueList", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomContinueTO" } } }], "GetContinueByIdsReq": [{ "name": "continueIds", "type": "array", "valueType": { "type": "base" } }, { "name": "needEcomAuthTo", "type": "base" }], "GetContinueByIdsResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "ecomContinueTOs", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomContinueTO" } } }, { "name": "ecomAuthTOs", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomAuthTO" } } }], "AddEcomContinueReq": [{ "name": "authId", "type": "base" }, { "name": "ecomContinueTOs", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomContinueTO" } } }], "ModifyEcomContinueReq": [{ "name": "ecomContinueTOs", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomContinueTO" } } }], "ModifySingleEcomContinueReq": [{ "name": "ecomContinueTO", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomContinueTO" } }], "DeleteEcomContinueReq": [{ "name": "ecomContinueTOs", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomContinueTO" } } }], "GetAppkeyPartTypesReq": [{ "name": "appkey", "type": "base" }], "GetAppkeyPartTypesResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "partTypes", "type": "array", "valueType": { "type": "base" } }], "SaveMisAppKeysReq": [{ "name": "mis", "type": "base" }, { "name": "appKeys", "type": "array", "valueType": { "type": "base" } }, { "name": "type", "type": "base" }], "GrantMisAppKeyReq": [{ "name": "misList", "type": "array", "valueType": { "type": "base" } }, { "name": "appKey", "type": "base" }, { "name": "type", "type": "base" }], "GetMisAppKeysReq": [{ "name": "mis", "type": "base" }], "GetMisAppKeysResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "appKeys", "type": "array", "valueType": { "type": "base" } }], "GetGrantMisReq": [{ "name": "appKey", "type": "base" }, { "name": "type", "type": "base" }], "MisAppkeyTO": [{ "name": "id", "type": "base" }, { "name": "mis", "type": "base" }, { "name": "appkey", "type": "base" }, { "name": "type", "type": "base" }], "GetGrantMisResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "misList", "type": "array", "valueType": { "type": "base" } }, { "name": "misAppkeyList", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "MisAppkeyTO" } } }], "SearchEcomAuthConditionTO": [{ "name": "id", "type": "base" }, { "name": "appkey", "type": "base" }, { "name": "type", "type": "base" }, { "name": "productName", "type": "base" }], "SearchEcomAuthReq": [{ "name": "condition", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "SearchEcomAuthConditionTO" } }, { "name": "pageModel", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "PageModel" } }], "SearchEcomAuthResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "ecomAuths", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "EcomAuthTO" } } }, { "name": "total", "type": "base" }], "BatchatchGetGrantMisReq": [{ "name": "appkey", "type": "array", "valueType": { "type": "base" } }, { "name": "type", "type": "base" }], "BatchatchGetGrantMisResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "misAppkeys", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "MisAppkeyTO" } } }], "GetFeConfigReq": [{ "name": "feConfigKey", "type": "base" }], "GetFeConfigResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "feConfig", "type": "base" }] }, "AppConfigThriftService": { "getAppConfigByAppKey_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "AppConfigReq" } }], "batchGetAppConfigByAppKeyList_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "BatchAppConfigReq" } }], "getAppkeysByOctoAppkey_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "GetAppkeysReq" } }], "batchGetAppkeysByOctoAppkey_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "BatchGetAppkeysReq" } }], "listAppKey_args": [], "getEcomAuthByAppkey_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "GetEcomAuthByKeywordReq" } }], "getEcomAuthByOctoAppkey_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "GetEcomAuthByKeywordReq" } }], "modifyAppKey_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "ModifyAppKeyReq" } }], "createAppKey_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "CreateAppKeyReq" } }], "searchContinuesByAppkey_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "SearchContinuesByAppkeyReq" } }], "getContinueByIds_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "GetContinueByIdsReq" } }], "addEcomContinue_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "AddEcomContinueReq" } }], "modifyEcomContinue_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "ModifyEcomContinueReq" } }], "modifySingleEcomContinue_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "ModifySingleEcomContinueReq" } }], "deleteEcomContinue_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "DeleteEcomContinueReq" } }], "getAppkeyPartTypes_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "GetAppkeyPartTypesReq" } }], "saveMisAppKeys_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "SaveMisAppKeysReq" } }], "grantMisAppKey_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "GrantMisAppKeyReq" } }], "getMisAppkeys_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "GetMisAppKeysReq" } }], "getGrantMis_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "GetGrantMisReq" } }], "searchEcomAuth_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "SearchEcomAuthReq" } }], "batchGetGrantMis_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "BatchatchGetGrantMisReq" } }], "getFeConfig_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "AppConfigThriftServiceModel", "name": "GetFeConfigReq" } }] }, "CommonModel": { "Status": [{ "name": "code", "type": "base" }, { "name": "message", "type": "base" }], "CommonResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }], "PageModel": [{ "name": "page", "type": "base" }, { "name": "size", "type": "base" }], "UtmParamTO": [{ "name": "appKey", "type": "base" }, { "name": "uuid", "type": "base" }, { "name": "ip", "type": "base" }, { "name": "sdkVersion", "type": "base" }, { "name": "fingerprint", "type": "base" }, { "name": "platform", "type": "base" }, { "name": "version", "type": "base" }] }, "BatchTaskServiceModel": { "BatchTaskTO": [{ "name": "id", "type": "base" }, { "name": "type", "type": "base" }, { "name": "misId", "type": "base" }, { "name": "inputFileId", "type": "base" }, { "name": "outputFileId", "type": "base" }, { "name": "resultCode", "type": "base" }], "CreateBatchTaskReq": [{ "name": "batchTask", "type": "struct", "valueDefinition": { "namespace": "BatchTaskServiceModel", "name": "BatchTaskTO" } }], "CreateBatchTaskResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "id", "type": "base" }], "ModifyBatchTaskReq": [{ "name": "batchTask", "type": "struct", "valueDefinition": { "namespace": "BatchTaskServiceModel", "name": "BatchTaskTO" } }], "GetBatchTaskByTaskIdReq": [{ "name": "taskId", "type": "base" }], "GetBatchTaskByTaskIdResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "batchTask", "type": "struct", "valueDefinition": { "namespace": "BatchTaskServiceModel", "name": "BatchTaskTO" } }] }, "BatchTaskService": { "create_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BatchTaskServiceModel", "name": "CreateBatchTaskReq" } }], "modify_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BatchTaskServiceModel", "name": "ModifyBatchTaskReq" } }], "getBatchTaskByTaskId_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BatchTaskServiceModel", "name": "GetBatchTaskByTaskIdReq" } }] }, "BizAccountAdminThriftServiceModel": { "LogoutByTokenReq": [{ "name": "token", "type": "base" }], "LogoutOtherByTokenReq": [{ "name": "token", "type": "base" }], "LogoutByBizAccountReq": [{ "name": "bizAcctID", "type": "base" }], "LogoutByBizTokenReq": [{ "name": "bizTokenID", "type": "base" }], "CreateTokenReq": [{ "name": "bizAcctID", "type": "base" }, { "name": "appkey", "type": "base" }, { "name": "ip", "type": "base" }, { "name": "aclUserID", "type": "base" }, { "name": "aclBizAcctID", "type": "base" }, { "name": "loginType", "type": "base" }, { "name": "platform", "type": "base" }], "CreateTokenResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "token", "type": "struct", "valueDefinition": { "namespace": "BizTokenModel", "name": "TokenRespTO" } }], "RefreshTokenReq": [{ "name": "accessToken", "type": "base" }, { "name": "refreshToken", "type": "base" }, { "name": "ip", "type": "base" }, { "name": "utmParamTO", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "UtmParamTO" } }], "RefreshTokenResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "token", "type": "struct", "valueDefinition": { "namespace": "BizTokenModel", "name": "TokenRespTO" } }], "GenerateRandomPasswordReq": [{ "name": "length", "type": "base" }, { "name": "login", "type": "base" }], "GenerateRandomPasswordResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "randomPassword", "type": "base" }], "CreateBizAccountReq": [{ "name": "createdFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountCreatedFieldsTO" } }, { "name": "returnFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountFields" } }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTO" } }, { "name": "randPassword", "type": "base" }, { "name": "sendSms", "type": "base" }, { "name": "smsTemplate", "type": "base" }, { "name": "smsTemplateId", "type": "base" }, { "name": "pthd", "type": "base" }], "CreateBizAccountResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "bizAccount", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountTO" } }], "BatchCreateBizAccountReq": [{ "name": "createdFields", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountCreatedFieldsTO" } } }, { "name": "returnFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountFields" } }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTO" } }, { "name": "randPassword", "type": "base" }, { "name": "sendSms", "type": "base" }, { "name": "smsTemplate", "type": "base" }, { "name": "smsTemplateId", "type": "base" }, { "name": "pthd", "type": "base" }], "CreateBizAccountResultTO": [{ "name": "resultCode", "type": "base" }, { "name": "message", "type": "base" }, { "name": "login", "type": "base" }, { "name": "bizAcct", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountTO" } }], "BatchCreateBizAccountResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "resultTOs", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "CreateBizAccountResultTO" } } }], "CreateBizAccountEmailReq": [{ "name": "createdFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountCreatedFieldsTO" } }, { "name": "returnFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountFields" } }, { "name": "email", "type": "base" }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTOV2" } }, { "name": "randPassword", "type": "base" }, { "name": "sendSms", "type": "base" }, { "name": "smsTemplate", "type": "base" }, { "name": "smsTemplateId", "type": "base" }], "ModifyBizAccountReq": [{ "name": "id", "type": "base" }, { "name": "modifiedFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountModifiedFieldsTO" } }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTO" } }, { "name": "randPassword", "type": "base" }, { "name": "sendSms", "type": "base" }, { "name": "dpID", "type": "base" }, { "name": "unbindMobile", "type": "base" }, { "name": "logoutBizAccount", "type": "base" }, { "name": "smsTemplateId", "type": "base" }], "ModifyBizAccountOpReq": [{ "name": "id", "type": "base" }, { "name": "modifiedFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountModifiedFieldsTO" } }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTOV2" } }, { "name": "sendSms", "type": "base" }, { "name": "dpID", "type": "base" }, { "name": "smsTemplateId", "type": "base" }], "UnbindMobileReq": [{ "name": "id", "type": "base" }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTOV2" } }, { "name": "dpID", "type": "base" }], "ModifyBizAccountLoginReq": [{ "name": "id", "type": "base" }, { "name": "login", "type": "base" }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTO" } }, { "name": "dpID", "type": "base" }], "ModifyBizAccountLoginReqV2": [{ "name": "id", "type": "base" }, { "name": "login", "type": "base" }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTOV2" } }, { "name": "dpID", "type": "base" }], "EnableBizAccountReq": [{ "name": "id", "type": "base" }, { "name": "enable", "type": "base" }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTO" } }, { "name": "dpID", "type": "base" }], "EnableBizAccountReqV2": [{ "name": "id", "type": "base" }, { "name": "enable", "type": "base" }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTOV2" } }, { "name": "dpID", "type": "base" }], "BatchEnableBizAccountReq": [{ "name": "ids", "type": "array", "valueType": { "type": "base" } }, { "name": "dpIds", "type": "array", "valueType": { "type": "base" } }, { "name": "enable", "type": "base" }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTOV2" } }], "CreateBsidTokenResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "token", "type": "base" }, { "name": "bizTokenID", "type": "base" }], "CheckLoginValidReq": [{ "name": "login", "type": "base" }, { "name": "partType", "type": "base" }, { "name": "partKey", "type": "base" }], "ModifyBizAccountLoginOnlyForSdkReq": [{ "name": "id", "type": "base" }, { "name": "modifiedFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountModifiedFieldsTO" } }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTO" } }, { "name": "randPassword", "type": "base" }, { "name": "sendSms", "type": "base" }, { "name": "dpID", "type": "base" }, { "name": "unbindMobile", "type": "base" }, { "name": "logoutBizAccount", "type": "base" }, { "name": "login", "type": "base" }], "ModifyBizEmailReq": [{ "name": "id", "type": "base" }, { "name": "email", "type": "base" }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTOV2" } }, { "name": "dpID", "type": "base" }], "ModifyBizAcctActiveReq": [{ "name": "id", "type": "base" }, { "name": "logFields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTOV2" } }, { "name": "activeType", "type": "base" }], "BizAccActiveReq": [{ "name": "bizAcctIdList", "type": "array", "valueType": { "type": "base" } }], "BizAccActiveResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "activeMap", "type": "map", "keyType": { "type": "base" }, "valueType": { "type": "base" } }], "CheckPasswordLegalReq": [{ "name": "password", "type": "base" }, { "name": "login", "type": "base" }], "UniTokenTO": [{ "name": "message", "type": "base" }, { "name": "createTime", "type": "base" }, { "name": "expireTime", "type": "base" }], "CreateUniTokenReq": [{ "name": "uniToken", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "UniTokenTO" } }], "CreateUniTokenResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "uniToken", "type": "base" }] }, "BizAccountAdminThriftService": { "logoutByToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "LogoutByTokenReq" } }], "logoutOtherByToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "LogoutOtherByTokenReq" } }], "logoutByBizAccount_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "LogoutByBizAccountReq" } }], "logoutByBizToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "LogoutByBizTokenReq" } }], "logoutByPos_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "LogoutByTokenReq" } }], "createToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "CreateTokenReq" } }], "refreshToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "RefreshTokenReq" } }], "generateRandomPassword_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "GenerateRandomPasswordReq" } }], "createBizAccount_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "CreateBizAccountReq" } }], "batchCreateBizAccount_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "BatchCreateBizAccountReq" } }], "createBizAccountEmail_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "CreateBizAccountEmailReq" } }], "modifyBizAccount_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "ModifyBizAccountReq" } }], "modifyBizAccountOp_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "ModifyBizAccountOpReq" } }], "unbindMobile_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "UnbindMobileReq" } }], "modifyBizAccountLogin_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "ModifyBizAccountLoginReq" } }], "modifyBizAccountLoginV2_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "ModifyBizAccountLoginReqV2" } }], "enableBizAccount_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "EnableBizAccountReq" } }], "enableBizAccountV2_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "EnableBizAccountReqV2" } }], "batchEnableBizAccount_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "BatchEnableBizAccountReq" } }], "createBsidToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "CreateTokenReq" } }], "checkLoginValid_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "CheckLoginValidReq" } }], "checkLoginRepetition_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "CheckLoginValidReq" } }], "modifyBizAccountLoginOnlyForSdk_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "ModifyBizAccountLoginOnlyForSdkReq" } }], "modifyBizEmail_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "ModifyBizEmailReq" } }], "modifyBizAcctActive_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "ModifyBizAcctActiveReq" } }], "getBizAccountActiveByID_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "BizAccActiveReq" } }], "getBizAcctActiveOriginByID_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "BizAccActiveReq" } }], "checkPasswordLegal_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "CheckPasswordLegalReq" } }], "createUniToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "CreateUniTokenReq" } }] }, "BizTokenModel": { "TokenRespTO": [{ "name": "accessToken", "type": "base" }, { "name": "refreshToken", "type": "base" }, { "name": "expireIn", "type": "base" }, { "name": "refreshIn", "type": "base" }, { "name": "bizTokenID", "type": "base" }] }, "BizAccountModel": { "BizAccountCreatedFieldsTO": [{ "name": "login", "type": "base" }, { "name": "name", "type": "base" }, { "name": "password", "type": "base" }, { "name": "phone", "type": "base" }, { "name": "interCode", "type": "base" }, { "name": "contactName", "type": "base" }, { "name": "partType", "type": "base" }, { "name": "partKey", "type": "base" }, { "name": "contactPhone", "type": "base" }, { "name": "contactPhoneInterCode", "type": "base" }], "BizAccountFields": [{ "name": "id", "type": "base" }, { "name": "login", "type": "base" }, { "name": "name", "type": "base" }, { "name": "status", "type": "base" }, { "name": "createTime", "type": "base" }, { "name": "modifyTime", "type": "base" }, { "name": "phone", "type": "base" }, { "name": "interCode", "type": "base" }, { "name": "contactName", "type": "base" }, { "name": "dpID", "type": "base" }, { "name": "partType", "type": "base" }, { "name": "partKey", "type": "base" }, { "name": "email", "type": "base" }, { "name": "contactPhone", "type": "base" }, { "name": "contactPhoneInterCode", "type": "base" }, { "name": "lastLoginTime", "type": "base" }], "BizAccountLogTO": [{ "name": "bgSource", "type": "base" }, { "name": "operatorType", "type": "base" }, { "name": "operatorID", "type": "base" }, { "name": "operatorIP", "type": "base" }, { "name": "platform", "type": "base" }, { "name": "deviceUuid", "type": "base" }, { "name": "appKey", "type": "base" }, { "name": "appVersion", "type": "base" }, { "name": "sdkVersion", "type": "base" }, { "name": "operateType", "type": "base" }, { "name": "clientIP", "type": "base" }], "BizAccountTO": [{ "name": "id", "type": "base" }, { "name": "login", "type": "base" }, { "name": "name", "type": "base" }, { "name": "status", "type": "base" }, { "name": "createTime", "type": "base" }, { "name": "modifyTime", "type": "base" }, { "name": "phone", "type": "base" }, { "name": "interCode", "type": "base" }, { "name": "contactName", "type": "base" }, { "name": "dpID", "type": "base" }, { "name": "partType", "type": "base" }, { "name": "partKey", "type": "base" }, { "name": "email", "type": "base" }, { "name": "contactPhone", "type": "base" }, { "name": "contactPhoneInterCode", "type": "base" }, { "name": "lastLoginTime", "type": "base" }], "BizAccountLogTOV2": [{ "name": "bgSource", "type": "base" }, { "name": "misID", "type": "base" }, { "name": "operatorIP", "type": "base" }, { "name": "platform", "type": "base" }, { "name": "ua", "type": "base" }, { "name": "domain", "type": "base" }, { "name": "reason", "type": "base" }, { "name": "appVersion", "type": "base" }, { "name": "sdkVersion", "type": "base" }, { "name": "deviceUuid", "type": "base" }, { "name": "bizAcctId", "type": "base" }, { "name": "operateType", "type": "base" }, { "name": "clientIP", "type": "base" }], "BizAccountModifiedFieldsTO": [{ "name": "password", "type": "base" }, { "name": "name", "type": "base" }, { "name": "status", "type": "base" }, { "name": "phone", "type": "base" }, { "name": "interCode", "type": "base" }, { "name": "contactName", "type": "base" }, { "name": "contactPhone", "type": "base" }, { "name": "contactPhoneInterCode", "type": "base" }], "BizAccountPartTO": [{ "name": "partType", "type": "base" }, { "name": "partKey", "type": "base" }], "BizSensitiveTO": [{ "name": "loginSensitive", "type": "base" }, { "name": "nameSensitive", "type": "base" }, { "name": "contactSensitive", "type": "base" }] }, "BizAccountBgThriftServiceModel": { "FilterBizAccountByBgSourceReq": [{ "name": "idList", "type": "array", "valueType": { "type": "base" } }, { "name": "bgSource", "type": "base" }], "FilterBizAccountByBgSourceResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "idListAfterFilter", "type": "array", "valueType": { "type": "base" } }], "FilterBizAccountByBgSourcesReq": [{ "name": "idList", "type": "array", "valueType": { "type": "base" } }, { "name": "bgSources", "type": "array", "valueType": { "type": "base" } }], "BindReq": [{ "name": "bizAcctID", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "type", "type": "base" }], "BindResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }], "SearchBizAccountInBgReq": [{ "name": "id", "type": "base" }], "SearchBizAccountInBgResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "createBgIdList", "type": "array", "valueType": { "type": "base" } }, { "name": "belongsBgIdList", "type": "array", "valueType": { "type": "base" } }], "BizAcctBgTO": [{ "name": "bizAcctID", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "type", "type": "base" }], "SearchBizAccountBgResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "bizAcctBgMap", "type": "map", "keyType": { "type": "base" }, "valueType": { "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountBgThriftServiceModel", "name": "BizAcctBgTO" } } } }], "UnbindReq": [{ "name": "bizAcctID", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "type", "type": "base" }, { "name": "logTO", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountLogTOV2" } }] }, "BizAccountBgThriftService": { "filterBizAccountByBgSource_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountBgThriftServiceModel", "name": "FilterBizAccountByBgSourceReq" } }], "filterBizAccountByBgSources_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountBgThriftServiceModel", "name": "FilterBizAccountByBgSourcesReq" } }], "bind_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountBgThriftServiceModel", "name": "BindReq" } }], "searchBizAccountInBg_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountBgThriftServiceModel", "name": "SearchBizAccountInBgReq" } }], "searchBizAccountBg_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountPhoneThriftServiceModel", "name": "BizAcctIdsReq" } }], "unbind_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountBgThriftServiceModel", "name": "UnbindReq" } }] }, "BizAccountPhoneThriftServiceModel": { "BizAcctIdsReq": [{ "name": "ids", "type": "array", "valueType": { "type": "base" } }], "BizAcctPhoneTO": [{ "name": "phone", "type": "base" }, { "name": "interCode", "type": "base" }, { "name": "contactPhone", "type": "base" }, { "name": "contactInterCode", "type": "base" }], "BizAcctPhoneResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "phoneMap", "type": "map", "keyType": { "type": "base" }, "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountPhoneThriftServiceModel", "name": "BizAcctPhoneTO" } } }] }, "BizAccountInfoThriftServiceModel": { "ValidateTokenReq": [{ "name": "token", "type": "base" }, { "name": "appkey", "type": "base" }], "ValidateTokenResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "id", "type": "base" }], "DecryptTokenReq": [{ "name": "token", "type": "base" }], "DecryptTokenResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "bizTokenID", "type": "base" }, { "name": "createTime", "type": "base" }, { "name": "bizAcctId", "type": "base" }, { "name": "expireTime", "type": "base" }], "CheckPasswordByTokenReq": [{ "name": "token", "type": "base" }, { "name": "password", "type": "base" }], "CheckPasswordByIDReq": [{ "name": "id", "type": "base" }, { "name": "password", "type": "base" }], "CheckPasswordByDpIDReq": [{ "name": "dpID", "type": "base" }, { "name": "password", "type": "base" }], "GetBizAccountByTokenReq": [{ "name": "token", "type": "base" }, { "name": "fields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountFields" } }, { "name": "aclUserID", "type": "base" }, { "name": "aclBizAcctID", "type": "base" }, { "name": "loginType", "type": "base" }], "GetBizAccountByTokenResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "bizAccount", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountTO" } }, { "name": "aclUserID", "type": "base" }, { "name": "aclBizAcctID", "type": "base" }, { "name": "loginType", "type": "base" }], "GetBizAccountByIDReq": [{ "name": "id", "type": "base" }, { "name": "fields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountFields" } }], "GetBizAccountResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "bizAccount", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountTO" } }], "GetBizAccountByDpIDReq": [{ "name": "dpID", "type": "base" }, { "name": "fields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountFields" } }], "GetBizAccountByLoginReq": [{ "name": "login", "type": "base" }, { "name": "fields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountFields" } }, { "name": "partTO", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountPartTO" } }, { "name": "findDpAcctFirst", "type": "base" }], "GetAllBizAccountsResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "mtBizAccount", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountTO" } }, { "name": "dpBizAccount", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountTO" } }], "BatchGetBizAccountByIDListReq": [{ "name": "idList", "type": "array", "valueType": { "type": "base" } }, { "name": "fields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountFields" } }], "BatchGetBizAccountResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "bizAccountMap", "type": "map", "keyType": { "type": "base" }, "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountTO" } } }], "BatchGetBizAccountByDpIDListReq": [{ "name": "dpIDList", "type": "array", "valueType": { "type": "base" } }, { "name": "fields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountFields" } }], "SearchBizAccountByPhoneReq": [{ "name": "phone", "type": "base" }, { "name": "fields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountFields" } }, { "name": "interCode", "type": "base" }, { "name": "partType", "type": "base" }, { "name": "page", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "PageModel" } }, { "name": "scope", "type": "base" }], "SearchBizAccountByPhoneResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "bizAccountMap", "type": "map", "keyType": { "type": "base" }, "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountTO" } } }, { "name": "total", "type": "base" }], "SearchBizAccountByPartTOReq": [{ "name": "partTO", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountPartTO" } }, { "name": "fields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountFields" } }, { "name": "page", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "PageModel" } }], "SearchBizAccountByPartTOResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "bizAccountMap", "type": "map", "keyType": { "type": "base" }, "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountTO" } } }, { "name": "total", "type": "base" }], "QueryBizSensitiveReq": [{ "name": "bizAcctId", "type": "base" }], "QueryBizSensitiveResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "sensitiveInfo", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizSensitiveTO" } }], "GetBizAcctByEmailReq": [{ "name": "email", "type": "base" }, { "name": "fields", "type": "struct", "valueDefinition": { "namespace": "BizAccountModel", "name": "BizAccountFields" } }], "GetBizEmailByTokenResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "email", "type": "base" }], "DecryptUniTokenReq": [{ "name": "uniToken", "type": "base" }], "DecryptUniTokenResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "uniToken", "type": "struct", "valueDefinition": { "namespace": "BizAccountAdminThriftServiceModel", "name": "UniTokenTO" } }], "GetBizAccPhoneByIdReq": [{ "name": "id", "type": "base" }], "GetBizAccSinglePhoneResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "phone", "type": "base" }], "GetBizAccPhoneByIdsReq": [{ "name": "ids", "type": "array", "valueType": { "type": "base" } }], "GetBizAccPhoneResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "phoneMap", "type": "map", "keyType": { "type": "base" }, "valueType": { "type": "base" } }], "GetBizAccPhoneByDpIdsReq": [{ "name": "dpIds", "type": "array", "valueType": { "type": "base" } }], "GetBizAccPhoneByIdsAndTokenReq": [{ "name": "ids", "type": "array", "valueType": { "type": "base" } }, { "name": "token", "type": "base" }], "GetBizAccPhoneByDpIdsAndTokenReq": [{ "name": "dpIds", "type": "array", "valueType": { "type": "base" } }, { "name": "token", "type": "base" }] }, "BizAccountInfoThriftService": { "validateToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "ValidateTokenReq" } }], "decryptToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "DecryptTokenReq" } }], "checkPasswordByToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "CheckPasswordByTokenReq" } }], "checkPasswordByID_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "CheckPasswordByIDReq" } }], "checkPasswordByDpID_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "CheckPasswordByDpIDReq" } }], "getBizAccountByToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "GetBizAccountByTokenReq" } }], "getBizAccountByID_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "GetBizAccountByIDReq" } }], "getBizAccountByDpID_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "GetBizAccountByDpIDReq" } }], "getBizAccountByLogin_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "GetBizAccountByLoginReq" } }], "getAllBizAccountsByLogin_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "GetBizAccountByLoginReq" } }], "batchGetBizAccountByIDList_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "BatchGetBizAccountByIDListReq" } }], "batchGetBizAccountByDpIDList_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "BatchGetBizAccountByDpIDListReq" } }], "searchBizAccountByPhone_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "SearchBizAccountByPhoneReq" } }], "searchBizAccountByPartTO_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "SearchBizAccountByPartTOReq" } }], "queryBizSensitive_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "QueryBizSensitiveReq" } }], "getBizAcctByEmail_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "GetBizAcctByEmailReq" } }], "getBizAcctEmailByToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "GetBizAccountByTokenReq" } }], "decryptUniToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "DecryptUniTokenReq" } }], "getBizAccPhoneById_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "GetBizAccPhoneByIdReq" } }], "getThirdAcctInfoByBizAcctId_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "GetThirdAcctInfoByBizAcctIdReq" } }] }, "BizAccountThirdThriftServiceModel": { "ThirdBizAcctInfoTOField": [{ "name": "nickName", "type": "base" }, { "name": "headImg", "type": "base" }, { "name": "unionId", "type": "base" }], "GetThirdAcctInfoByBizAcctIdReq": [{ "name": "bizAcctId", "type": "base" }, { "name": "bgsource", "type": "base" }, { "name": "thirdPlatform", "type": "array", "valueType": { "type": "base" } }, { "name": "fields", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "ThirdBizAcctInfoTOField" } }], "ThirdBizAcctInfoTO": [{ "name": "id", "type": "base" }, { "name": "thirdPlatform", "type": "base" }, { "name": "unionId", "type": "base" }, { "name": "nickName", "type": "base" }, { "name": "updateTime", "type": "base" }, { "name": "headImg", "type": "base" }], "GetThirdAcctInfoByBizAcctIdResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "thirdBizAcctInfoTOs", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "ThirdBizAcctInfoTO" } } }], "BizAcctThirdTO": [{ "name": "bizAcctId", "type": "base" }, { "name": "unionId", "type": "base" }, { "name": "thirdPlatform", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "bindSource", "type": "base" }, { "name": "bindPlatform", "type": "base" }], "BizAcctThirdBindingReq": [{ "name": "bizAcctThirdTO", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "BizAcctThirdTO" } }, { "name": "utmParam", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "UtmParamTO" } }], "BizAcctThirdBindingResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }], "BizAcctThirdUnBindReq": [{ "name": "bizAcctId", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "thirdPlatform", "type": "base" }, { "name": "utmParam", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "UtmParamTO" } }], "BizAcctThirdUnBindResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }], "BizAcctThirdBindingInfoReq": [{ "name": "bizAcctId", "type": "base" }, { "name": "unionId", "type": "base" }, { "name": "thirdPlatform", "type": "base" }, { "name": "bgSource", "type": "base" }], "BizAcctThirdInfoResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "bizAcctThirdTO", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "BizAcctThirdTO" } } }], "SaveThirdAcctInfoReq": [{ "name": "thirdBizAcctInfoTO", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "ThirdBizAcctInfoTO" } }], "SaveThirdAcctInfoResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }], "WeChatFollowReq": [{ "name": "utmParam", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "UtmParamTO" } }, { "name": "appId", "type": "base" }, { "name": "openId", "type": "base" }], "WeChatFollowResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }], "WeChatFollowV1Req": [{ "name": "utmParam", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "UtmParamTO" } }, { "name": "appId", "type": "base" }, { "name": "openId", "type": "base" }, { "name": "unionId", "type": "base" }], "WeChatFollowBindingReq": [{ "name": "utmParam", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "UtmParamTO" } }, { "name": "appId", "type": "base" }, { "name": "openId", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "accessToken", "type": "base" }, { "name": "isDpId", "type": "base" }], "WeChatFollowBindingV1Req": [{ "name": "utmParam", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "UtmParamTO" } }, { "name": "appId", "type": "base" }, { "name": "openId", "type": "base" }, { "name": "unionId", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "accessToken", "type": "base" }], "WeChatUnFollowReq": [{ "name": "utmParam", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "UtmParamTO" } }, { "name": "appId", "type": "base" }, { "name": "openId", "type": "base" }], "WeChatUnFollowResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }], "GetWeChatInfoReq": [{ "name": "appId", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "bizAcctId", "type": "base" }], "WeChatInfoTO": [{ "name": "openId", "type": "base" }, { "name": "bizAcctId", "type": "base" }, { "name": "status", "type": "base" }], "GetWeChatInfoResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "weChatInfo", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "WeChatInfoTO" } }], "BatchGetWeChatInfoReq": [{ "name": "appId", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "bizAcctIds", "type": "array", "valueType": { "type": "base" } }], "BatchGetWeChatInfoResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "weChatInfo", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "WeChatInfoTO" } } }], "WeChatFollowTO": [{ "name": "appID", "type": "base" }, { "name": "openId", "type": "base" }, { "name": "unionId", "type": "base" }, { "name": "status", "type": "base" }], "BatchGetWeChatFollowResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "weChatFollow", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "WeChatFollowTO" } } }], "WeChatFollowBindingImport": [{ "name": "appId", "type": "base" }, { "name": "openId", "type": "base" }, { "name": "unionId", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "bizAcctId", "type": "base" }, { "name": "isDpId", "type": "base" }] }, "BizAccountOperationInfoServiceModel": { "SearchBizAccountHistoryReq": [{ "name": "bizAcctId", "type": "base" }, { "name": "page", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "PageModel" } }], "BizAcctOperationLogTO": [{ "name": "id", "type": "base" }, { "name": "source", "type": "base" }, { "name": "operator", "type": "base" }, { "name": "bizAcctId", "type": "base" }, { "name": "changeType", "type": "base" }, { "name": "oldInfo", "type": "base" }, { "name": "newInfo", "type": "base" }, { "name": "addTime", "type": "base" }, { "name": "ip", "type": "base" }, { "name": "ext1", "type": "base" }], "SearchBizAccountHistoryResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "logs", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountOperationInfoServiceModel", "name": "BizAcctOperationLogTO" } } }, { "name": "total", "type": "base" }], "ClearBizAcctCacheReq": [{ "name": "bizAcctId", "type": "base" }] }, "BizAccountOperationInfoService": { "searchBizAccountHistory_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountOperationInfoServiceModel", "name": "SearchBizAccountHistoryReq" } }], "clearBizAcctCache_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountOperationInfoServiceModel", "name": "ClearBizAcctCacheReq" } }] }, "BizAccountPartThriftService": { "nextPartKeyFromPool_args": [{ "name": "appkey", "type": "base" }], "addPartKeyToPool_args": [{ "name": "appkey", "type": "base" }, { "name": "partKey", "type": "base" }] }, "BizAccountPartThriftServiceModel": { "NextPartKeyFromPoolResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "partKey", "type": "base" }] }, "BizAccountPhoneInfoThriftService": { "getBizAccPhoneByIds_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "GetBizAccPhoneByIdsReq" } }], "getBizAccPhoneByDpIds_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "GetBizAccPhoneByDpIdsReq" } }], "getBizAccPhoneByIdsV2_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "GetBizAccPhoneByIdsAndTokenReq" } }], "getBizAccPhoneByDpIdsV2_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountInfoThriftServiceModel", "name": "GetBizAccPhoneByDpIdsAndTokenReq" } }], "getBizAcctPhoneByIds_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountPhoneThriftServiceModel", "name": "BizAcctIdsReq" } }] }, "BizAccountThirdThriftService": { "binding_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "BizAcctThirdBindingReq" } }], "unBind_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "BizAcctThirdUnBindReq" } }], "getThirdBindingInfo_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "BizAcctThirdBindingInfoReq" } }], "saveThirdAcctInfo_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "SaveThirdAcctInfoReq" } }], "follow_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "WeChatFollowReq" } }], "followV1_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "WeChatFollowV1Req" } }], "followBinding_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "WeChatFollowBindingReq" } }], "followBindingV1_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "WeChatFollowBindingV1Req" } }], "unFollow_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "WeChatUnFollowReq" } }], "getWeChatInfoByAcctId_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "GetWeChatInfoReq" } }], "getWeChatInfoByAcctIds_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "BatchGetWeChatInfoReq" } }], "getWeChatInfoByOpenIds_args": [{ "name": "req", "type": "array", "valueType": { "type": "base" } }], "getWeChatInfoByUnionIds_args": [{ "name": "req", "type": "array", "valueType": { "type": "base" } }], "followBindingImport_args": [{ "name": "req", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "WeChatFollowBindingImport" } } }], "followBindingImportV1_args": [{ "name": "req", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizAccountThirdThriftServiceModel", "name": "WeChatFollowBindingImport" } } }] }, "BizOauthLoginThriftServiceModel": { "AcquireCodeReq": [{ "name": "token", "type": "base" }], "AcquireCodeResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "bizTokenID", "type": "base" }, { "name": "bizAcctID", "type": "base" }, { "name": "salt", "type": "base" }], "ExchangeTokenReq": [{ "name": "bizAcctID", "type": "base" }, { "name": "appkey", "type": "base" }, { "name": "bizTokenID", "type": "base" }, { "name": "salt", "type": "base" }], "ExchangeTokenResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "token", "type": "struct", "valueDefinition": { "namespace": "BizTokenModel", "name": "TokenRespTO" } }], "BizOauthLoginTO": [{ "name": "id", "type": "base" }, { "name": "sourceTokenId", "type": "base" }, { "name": "tokenId", "type": "base" }, { "name": "loginStatus", "type": "base" }, { "name": "expireTime", "type": "base" }, { "name": "loginType", "type": "base" }, { "name": "salt", "type": "base" }, { "name": "loginTime", "type": "base" }, { "name": "addTime", "type": "base" }, { "name": "modTime", "type": "base" }], "CreateBizOauthLoginReq": [{ "name": "bizOauthLoginTO", "type": "struct", "valueDefinition": { "namespace": "BizOauthLoginThriftServiceModel", "name": "BizOauthLoginTO" } }], "CreateBizOauthLoginResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "createdId", "type": "base" }], "QueryBizOauthLoginsReq": [{ "name": "pageModel", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "PageModel" } }, { "name": "forceMaster", "type": "base" }, { "name": "id", "type": "base" }, { "name": "sourceTokenId", "type": "base" }, { "name": "loginType", "type": "base" }, { "name": "loginStatus", "type": "base" }], "QueryBizOauthLoginsResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "bizOauthLogins", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "BizOauthLoginThriftServiceModel", "name": "BizOauthLoginTO" } } }], "UpdateBizOauthLoginReq": [{ "name": "bizOauthLogin", "type": "struct", "valueDefinition": { "namespace": "BizOauthLoginThriftServiceModel", "name": "BizOauthLoginTO" } }], "UpdateBizOauthLoginResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }] }, "BizOauthLoginThriftService": { "acquireCode_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizOauthLoginThriftServiceModel", "name": "AcquireCodeReq" } }], "exchangeToken_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizOauthLoginThriftServiceModel", "name": "ExchangeTokenReq" } }], "createBizOauthLogin_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizOauthLoginThriftServiceModel", "name": "CreateBizOauthLoginReq" } }], "queryBizOauthLogins_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizOauthLoginThriftServiceModel", "name": "QueryBizOauthLoginsReq" } }], "updateBizOauthLogin_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "BizOauthLoginThriftServiceModel", "name": "UpdateBizOauthLoginReq" } }] }, "EPassportEcomAuditServiceModel": { "EcomAuditModel": [{ "name": "id", "type": "base" }, { "name": "status", "type": "base" }, { "name": "rejectReason", "type": "base" }, { "name": "octoAppkey", "type": "base" }, { "name": "secret", "type": "base" }, { "name": "type", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "desc", "type": "base" }, { "name": "author", "type": "base" }, { "name": "approver", "type": "base" }, { "name": "addtime", "type": "base" }, { "name": "modtime", "type": "base" }, { "name": "authId", "type": "base" }, { "name": "productName", "type": "base" }, { "name": "productAddress", "type": "base" }, { "name": "productManagers", "type": "array", "valueType": { "type": "base" } }, { "name": "developers", "type": "array", "valueType": { "type": "base" } }], "CreateEcomAuditReq": [{ "name": "ecomAuditModel", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "EcomAuditModel" } }], "CreateEcomAuditResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "id", "type": "base" }], "QueryEcomAuditListByMisReq": [{ "name": "mis", "type": "base" }, { "name": "status", "type": "base" }, { "name": "pageModel", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "PageModel" } }], "QueryEcomAuditListByMisResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "total", "type": "base" }, { "name": "ecomAudits", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "EcomAuditModel" } } }], "QueryEcomAuditListByIdListReq": [{ "name": "ids", "type": "array", "valueType": { "type": "base" } }, { "name": "pageModel", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "PageModel" } }], "QueryEcomAuditListByIdListResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "ecomAudits", "type": "array", "valueType": { "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "EcomAuditModel" } } }], "ModifyEcomAuditReq": [{ "name": "ecomAuditModel", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "EcomAuditModel" } }], "CustomerAuditModel": [{ "name": "id", "type": "base" }, { "name": "status", "type": "base" }, { "name": "comment", "type": "base" }, { "name": "customerId", "type": "base" }, { "name": "bizAcctID", "type": "base" }, { "name": "qualificationInfo", "type": "base" }, { "name": "customerType", "type": "base" }, { "name": "auditId", "type": "base" }, { "name": "phone", "type": "base" }, { "name": "addtime", "type": "base" }, { "name": "modtime", "type": "base" }, { "name": "qualificationInfoUrls", "type": "base" }, { "name": "changeBook", "type": "base" }, { "name": "bizLine", "type": "base" }, { "name": "interCode", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "password", "type": "base" }], "CreateCustomerAuditReq": [{ "name": "customerAuditModel", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "CustomerAuditModel" } }], "QueryCustomerAuditReq": [{ "name": "bizAcctID", "type": "base" }], "QueryCustomerAuditResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "customerAuditModel", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "CustomerAuditModel" } }], "ModifyMobileAuditTO": [{ "name": "id", "type": "base" }, { "name": "acctId", "type": "base" }, { "name": "customerId", "type": "base" }, { "name": "bizLine", "type": "base" }, { "name": "legalPersonPhone", "type": "base" }, { "name": "newPhone", "type": "base" }, { "name": "bgSource", "type": "base" }, { "name": "appkey", "type": "base" }, { "name": "status", "type": "base" }, { "name": "addtime", "type": "base" }, { "name": "modtime", "type": "base" }, { "name": "legalPersonPhoneInterCode", "type": "base" }, { "name": "newPhoneInterCode", "type": "base" }], "CreateModifyMobileAuditReq": [{ "name": "modifyMobileAuditTO", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "ModifyMobileAuditTO" } }], "CreateModifyMobileAuditResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "modifyMobileAuditTO", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "ModifyMobileAuditTO" } }], "UpdateModifyMobileAuditReq": [{ "name": "modifyMobileAuditTO", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "ModifyMobileAuditTO" } }], "QueryModifyMobileAuditReq": [{ "name": "modifyId", "type": "base" }], "QueryModifyMobileAuditResp": [{ "name": "status", "type": "struct", "valueDefinition": { "namespace": "CommonModel", "name": "Status" } }, { "name": "modifyMobileAuditTO", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "ModifyMobileAuditTO" } }] }, "EPassportEcomAuditService": { "createEcomAudit_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "CreateEcomAuditReq" } }], "queryEcomAuditList_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "QueryEcomAuditListByMisReq" } }], "queryEcomAuditItem_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "QueryEcomAuditListByIdListReq" } }], "modifyEcomAudit_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "ModifyEcomAuditReq" } }], "createCustomerFindAudit_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "CreateCustomerAuditReq" } }], "queryCustomerFindAudit_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "QueryCustomerAuditReq" } }], "createModifyMobileAudit_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "CreateModifyMobileAuditReq" } }], "updateModifyMobileAudit_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "UpdateModifyMobileAuditReq" } }], "queryModifyMobileAudit_args": [{ "name": "req", "type": "struct", "valueDefinition": { "namespace": "EPassportEcomAuditServiceModel", "name": "QueryModifyMobileAuditReq" } }] } };
var BizAccountThirdThriftServiceModel;
(function (BizAccountThirdThriftServiceModel) {
    let WeChatFollowEnum;
    (function (WeChatFollowEnum) {
        WeChatFollowEnum[WeChatFollowEnum["FOLLOW"] = 0] = "FOLLOW";
        WeChatFollowEnum[WeChatFollowEnum["UN_FOLLOW"] = 1] = "UN_FOLLOW";
    })(WeChatFollowEnum = BizAccountThirdThriftServiceModel.WeChatFollowEnum || (BizAccountThirdThriftServiceModel.WeChatFollowEnum = {}));
})(BizAccountThirdThriftServiceModel = exports.BizAccountThirdThriftServiceModel || (exports.BizAccountThirdThriftServiceModel = {}));
