//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var CommonModel_ttypes = require('./CommonModel_types')
var AppConfigThriftServiceModel_ttypes = require('./AppConfigThriftServiceModel_types')


var ttypes = require('./AppConfigThriftService_types');
//HELPER FUNCTIONS AND STRUCTURES

var AppConfigThriftService_getAppConfigByAppKey_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_getAppConfigByAppKey_args.prototype = {};
AppConfigThriftService_getAppConfigByAppKey_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.AppConfigReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getAppConfigByAppKey_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getAppConfigByAppKey_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getAppConfigByAppKey_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_getAppConfigByAppKey_result.prototype = {};
AppConfigThriftService_getAppConfigByAppKey_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.AppConfigResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getAppConfigByAppKey_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getAppConfigByAppKey_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_batchGetAppConfigByAppKeyList_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_batchGetAppConfigByAppKeyList_args.prototype = {};
AppConfigThriftService_batchGetAppConfigByAppKeyList_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.BatchAppConfigReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_batchGetAppConfigByAppKeyList_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_batchGetAppConfigByAppKeyList_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_batchGetAppConfigByAppKeyList_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_batchGetAppConfigByAppKeyList_result.prototype = {};
AppConfigThriftService_batchGetAppConfigByAppKeyList_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.BatchAppConfigResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_batchGetAppConfigByAppKeyList_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_batchGetAppConfigByAppKeyList_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getAppkeysByOctoAppkey_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_getAppkeysByOctoAppkey_args.prototype = {};
AppConfigThriftService_getAppkeysByOctoAppkey_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.GetAppkeysReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getAppkeysByOctoAppkey_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getAppkeysByOctoAppkey_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getAppkeysByOctoAppkey_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_getAppkeysByOctoAppkey_result.prototype = {};
AppConfigThriftService_getAppkeysByOctoAppkey_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.GetAppkeysResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getAppkeysByOctoAppkey_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getAppkeysByOctoAppkey_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_batchGetAppkeysByOctoAppkey_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_batchGetAppkeysByOctoAppkey_args.prototype = {};
AppConfigThriftService_batchGetAppkeysByOctoAppkey_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.BatchGetAppkeysReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_batchGetAppkeysByOctoAppkey_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_batchGetAppkeysByOctoAppkey_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_batchGetAppkeysByOctoAppkey_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_batchGetAppkeysByOctoAppkey_result.prototype = {};
AppConfigThriftService_batchGetAppkeysByOctoAppkey_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.BatchGetAppkeysResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_batchGetAppkeysByOctoAppkey_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_batchGetAppkeysByOctoAppkey_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_listAppKey_args = function(args) {
};
AppConfigThriftService_listAppKey_args.prototype = {};
AppConfigThriftService_listAppKey_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_listAppKey_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_listAppKey_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_listAppKey_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_listAppKey_result.prototype = {};
AppConfigThriftService_listAppKey_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.ListAppKeyResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_listAppKey_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_listAppKey_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getEcomAuthByAppkey_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_getEcomAuthByAppkey_args.prototype = {};
AppConfigThriftService_getEcomAuthByAppkey_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.GetEcomAuthByKeywordReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getEcomAuthByAppkey_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getEcomAuthByAppkey_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getEcomAuthByAppkey_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_getEcomAuthByAppkey_result.prototype = {};
AppConfigThriftService_getEcomAuthByAppkey_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.GetEcomAuthResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getEcomAuthByAppkey_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getEcomAuthByAppkey_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getEcomAuthByOctoAppkey_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_getEcomAuthByOctoAppkey_args.prototype = {};
AppConfigThriftService_getEcomAuthByOctoAppkey_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.GetEcomAuthByKeywordReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getEcomAuthByOctoAppkey_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getEcomAuthByOctoAppkey_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getEcomAuthByOctoAppkey_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_getEcomAuthByOctoAppkey_result.prototype = {};
AppConfigThriftService_getEcomAuthByOctoAppkey_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.GetEcomAuthListResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getEcomAuthByOctoAppkey_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getEcomAuthByOctoAppkey_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_modifyAppKey_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_modifyAppKey_args.prototype = {};
AppConfigThriftService_modifyAppKey_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.ModifyAppKeyReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_modifyAppKey_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_modifyAppKey_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_modifyAppKey_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_modifyAppKey_result.prototype = {};
AppConfigThriftService_modifyAppKey_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommonModel_ttypes.CommonResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_modifyAppKey_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_modifyAppKey_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_createAppKey_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_createAppKey_args.prototype = {};
AppConfigThriftService_createAppKey_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.CreateAppKeyReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_createAppKey_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_createAppKey_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_createAppKey_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_createAppKey_result.prototype = {};
AppConfigThriftService_createAppKey_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommonModel_ttypes.CommonResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_createAppKey_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_createAppKey_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_searchContinuesByAppkey_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_searchContinuesByAppkey_args.prototype = {};
AppConfigThriftService_searchContinuesByAppkey_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.SearchContinuesByAppkeyReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_searchContinuesByAppkey_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_searchContinuesByAppkey_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_searchContinuesByAppkey_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_searchContinuesByAppkey_result.prototype = {};
AppConfigThriftService_searchContinuesByAppkey_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.SearchContinuesByAppkeyResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_searchContinuesByAppkey_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_searchContinuesByAppkey_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getContinueByIds_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_getContinueByIds_args.prototype = {};
AppConfigThriftService_getContinueByIds_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.GetContinueByIdsReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getContinueByIds_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getContinueByIds_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getContinueByIds_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_getContinueByIds_result.prototype = {};
AppConfigThriftService_getContinueByIds_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.GetContinueByIdsResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getContinueByIds_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getContinueByIds_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_addEcomContinue_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_addEcomContinue_args.prototype = {};
AppConfigThriftService_addEcomContinue_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.AddEcomContinueReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_addEcomContinue_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_addEcomContinue_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_addEcomContinue_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_addEcomContinue_result.prototype = {};
AppConfigThriftService_addEcomContinue_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommonModel_ttypes.CommonResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_addEcomContinue_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_addEcomContinue_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_modifyEcomContinue_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_modifyEcomContinue_args.prototype = {};
AppConfigThriftService_modifyEcomContinue_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.ModifyEcomContinueReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_modifyEcomContinue_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_modifyEcomContinue_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_modifyEcomContinue_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_modifyEcomContinue_result.prototype = {};
AppConfigThriftService_modifyEcomContinue_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommonModel_ttypes.CommonResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_modifyEcomContinue_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_modifyEcomContinue_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_modifySingleEcomContinue_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_modifySingleEcomContinue_args.prototype = {};
AppConfigThriftService_modifySingleEcomContinue_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.ModifySingleEcomContinueReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_modifySingleEcomContinue_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_modifySingleEcomContinue_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_modifySingleEcomContinue_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_modifySingleEcomContinue_result.prototype = {};
AppConfigThriftService_modifySingleEcomContinue_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommonModel_ttypes.CommonResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_modifySingleEcomContinue_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_modifySingleEcomContinue_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_deleteEcomContinue_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_deleteEcomContinue_args.prototype = {};
AppConfigThriftService_deleteEcomContinue_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.DeleteEcomContinueReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_deleteEcomContinue_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_deleteEcomContinue_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_deleteEcomContinue_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_deleteEcomContinue_result.prototype = {};
AppConfigThriftService_deleteEcomContinue_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommonModel_ttypes.CommonResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_deleteEcomContinue_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_deleteEcomContinue_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getAppkeyPartTypes_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_getAppkeyPartTypes_args.prototype = {};
AppConfigThriftService_getAppkeyPartTypes_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.GetAppkeyPartTypesReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getAppkeyPartTypes_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getAppkeyPartTypes_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getAppkeyPartTypes_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_getAppkeyPartTypes_result.prototype = {};
AppConfigThriftService_getAppkeyPartTypes_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.GetAppkeyPartTypesResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getAppkeyPartTypes_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getAppkeyPartTypes_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_saveMisAppKeys_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_saveMisAppKeys_args.prototype = {};
AppConfigThriftService_saveMisAppKeys_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.SaveMisAppKeysReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_saveMisAppKeys_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_saveMisAppKeys_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_saveMisAppKeys_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_saveMisAppKeys_result.prototype = {};
AppConfigThriftService_saveMisAppKeys_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommonModel_ttypes.CommonResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_saveMisAppKeys_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_saveMisAppKeys_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_grantMisAppKey_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_grantMisAppKey_args.prototype = {};
AppConfigThriftService_grantMisAppKey_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.GrantMisAppKeyReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_grantMisAppKey_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_grantMisAppKey_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_grantMisAppKey_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_grantMisAppKey_result.prototype = {};
AppConfigThriftService_grantMisAppKey_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommonModel_ttypes.CommonResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_grantMisAppKey_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_grantMisAppKey_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getMisAppkeys_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_getMisAppkeys_args.prototype = {};
AppConfigThriftService_getMisAppkeys_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.GetMisAppKeysReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getMisAppkeys_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getMisAppkeys_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getMisAppkeys_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_getMisAppkeys_result.prototype = {};
AppConfigThriftService_getMisAppkeys_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.GetMisAppKeysResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getMisAppkeys_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getMisAppkeys_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getGrantMis_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_getGrantMis_args.prototype = {};
AppConfigThriftService_getGrantMis_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.GetGrantMisReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getGrantMis_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getGrantMis_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getGrantMis_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_getGrantMis_result.prototype = {};
AppConfigThriftService_getGrantMis_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.GetGrantMisResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getGrantMis_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getGrantMis_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_searchEcomAuth_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_searchEcomAuth_args.prototype = {};
AppConfigThriftService_searchEcomAuth_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.SearchEcomAuthReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_searchEcomAuth_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_searchEcomAuth_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_searchEcomAuth_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_searchEcomAuth_result.prototype = {};
AppConfigThriftService_searchEcomAuth_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.SearchEcomAuthResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_searchEcomAuth_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_searchEcomAuth_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_batchGetGrantMis_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_batchGetGrantMis_args.prototype = {};
AppConfigThriftService_batchGetGrantMis_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.BatchatchGetGrantMisReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_batchGetGrantMis_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_batchGetGrantMis_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_batchGetGrantMis_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_batchGetGrantMis_result.prototype = {};
AppConfigThriftService_batchGetGrantMis_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.BatchatchGetGrantMisResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_batchGetGrantMis_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_batchGetGrantMis_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getFeConfig_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
AppConfigThriftService_getFeConfig_args.prototype = {};
AppConfigThriftService_getFeConfig_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new AppConfigThriftServiceModel_ttypes.GetFeConfigReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getFeConfig_args.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getFeConfig_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftService_getFeConfig_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
AppConfigThriftService_getFeConfig_result.prototype = {};
AppConfigThriftService_getFeConfig_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new AppConfigThriftServiceModel_ttypes.GetFeConfigResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AppConfigThriftService_getFeConfig_result.prototype.write = function(output) {
  output.writeStructBegin('AppConfigThriftService_getFeConfig_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AppConfigThriftServiceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
AppConfigThriftServiceClient.prototype = {};
AppConfigThriftServiceClient.prototype.seqid = function() { return this._seqid; }
AppConfigThriftServiceClient.prototype.new_seqid = function() { return this._seqid += 1; }
AppConfigThriftServiceClient.prototype.getAppConfigByAppKey = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getAppConfigByAppKey(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getAppConfigByAppKey(req);
  }
};

AppConfigThriftServiceClient.prototype.send_getAppConfigByAppKey = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getAppConfigByAppKey', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_getAppConfigByAppKey_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_getAppConfigByAppKey = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_getAppConfigByAppKey_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getAppConfigByAppKey failed: unknown result');
};
AppConfigThriftServiceClient.prototype.batchGetAppConfigByAppKeyList = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_batchGetAppConfigByAppKeyList(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_batchGetAppConfigByAppKeyList(req);
  }
};

AppConfigThriftServiceClient.prototype.send_batchGetAppConfigByAppKeyList = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('batchGetAppConfigByAppKeyList', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_batchGetAppConfigByAppKeyList_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_batchGetAppConfigByAppKeyList = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_batchGetAppConfigByAppKeyList_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('batchGetAppConfigByAppKeyList failed: unknown result');
};
AppConfigThriftServiceClient.prototype.getAppkeysByOctoAppkey = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getAppkeysByOctoAppkey(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getAppkeysByOctoAppkey(req);
  }
};

AppConfigThriftServiceClient.prototype.send_getAppkeysByOctoAppkey = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getAppkeysByOctoAppkey', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_getAppkeysByOctoAppkey_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_getAppkeysByOctoAppkey = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_getAppkeysByOctoAppkey_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getAppkeysByOctoAppkey failed: unknown result');
};
AppConfigThriftServiceClient.prototype.batchGetAppkeysByOctoAppkey = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_batchGetAppkeysByOctoAppkey(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_batchGetAppkeysByOctoAppkey(req);
  }
};

AppConfigThriftServiceClient.prototype.send_batchGetAppkeysByOctoAppkey = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('batchGetAppkeysByOctoAppkey', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_batchGetAppkeysByOctoAppkey_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_batchGetAppkeysByOctoAppkey = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_batchGetAppkeysByOctoAppkey_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('batchGetAppkeysByOctoAppkey failed: unknown result');
};
AppConfigThriftServiceClient.prototype.listAppKey = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_listAppKey();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_listAppKey();
  }
};

AppConfigThriftServiceClient.prototype.send_listAppKey = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('listAppKey', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_listAppKey_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_listAppKey = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_listAppKey_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('listAppKey failed: unknown result');
};
AppConfigThriftServiceClient.prototype.getEcomAuthByAppkey = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getEcomAuthByAppkey(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getEcomAuthByAppkey(req);
  }
};

AppConfigThriftServiceClient.prototype.send_getEcomAuthByAppkey = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getEcomAuthByAppkey', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_getEcomAuthByAppkey_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_getEcomAuthByAppkey = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_getEcomAuthByAppkey_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getEcomAuthByAppkey failed: unknown result');
};
AppConfigThriftServiceClient.prototype.getEcomAuthByOctoAppkey = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getEcomAuthByOctoAppkey(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getEcomAuthByOctoAppkey(req);
  }
};

AppConfigThriftServiceClient.prototype.send_getEcomAuthByOctoAppkey = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getEcomAuthByOctoAppkey', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_getEcomAuthByOctoAppkey_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_getEcomAuthByOctoAppkey = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_getEcomAuthByOctoAppkey_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getEcomAuthByOctoAppkey failed: unknown result');
};
AppConfigThriftServiceClient.prototype.modifyAppKey = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_modifyAppKey(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_modifyAppKey(req);
  }
};

AppConfigThriftServiceClient.prototype.send_modifyAppKey = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('modifyAppKey', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_modifyAppKey_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_modifyAppKey = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_modifyAppKey_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('modifyAppKey failed: unknown result');
};
AppConfigThriftServiceClient.prototype.createAppKey = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createAppKey(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createAppKey(req);
  }
};

AppConfigThriftServiceClient.prototype.send_createAppKey = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('createAppKey', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_createAppKey_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_createAppKey = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_createAppKey_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createAppKey failed: unknown result');
};
AppConfigThriftServiceClient.prototype.searchContinuesByAppkey = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_searchContinuesByAppkey(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_searchContinuesByAppkey(req);
  }
};

AppConfigThriftServiceClient.prototype.send_searchContinuesByAppkey = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('searchContinuesByAppkey', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_searchContinuesByAppkey_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_searchContinuesByAppkey = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_searchContinuesByAppkey_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('searchContinuesByAppkey failed: unknown result');
};
AppConfigThriftServiceClient.prototype.getContinueByIds = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getContinueByIds(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getContinueByIds(req);
  }
};

AppConfigThriftServiceClient.prototype.send_getContinueByIds = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getContinueByIds', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_getContinueByIds_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_getContinueByIds = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_getContinueByIds_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getContinueByIds failed: unknown result');
};
AppConfigThriftServiceClient.prototype.addEcomContinue = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_addEcomContinue(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_addEcomContinue(req);
  }
};

AppConfigThriftServiceClient.prototype.send_addEcomContinue = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('addEcomContinue', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_addEcomContinue_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_addEcomContinue = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_addEcomContinue_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('addEcomContinue failed: unknown result');
};
AppConfigThriftServiceClient.prototype.modifyEcomContinue = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_modifyEcomContinue(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_modifyEcomContinue(req);
  }
};

AppConfigThriftServiceClient.prototype.send_modifyEcomContinue = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('modifyEcomContinue', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_modifyEcomContinue_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_modifyEcomContinue = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_modifyEcomContinue_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('modifyEcomContinue failed: unknown result');
};
AppConfigThriftServiceClient.prototype.modifySingleEcomContinue = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_modifySingleEcomContinue(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_modifySingleEcomContinue(req);
  }
};

AppConfigThriftServiceClient.prototype.send_modifySingleEcomContinue = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('modifySingleEcomContinue', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_modifySingleEcomContinue_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_modifySingleEcomContinue = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_modifySingleEcomContinue_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('modifySingleEcomContinue failed: unknown result');
};
AppConfigThriftServiceClient.prototype.deleteEcomContinue = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deleteEcomContinue(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deleteEcomContinue(req);
  }
};

AppConfigThriftServiceClient.prototype.send_deleteEcomContinue = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('deleteEcomContinue', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_deleteEcomContinue_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_deleteEcomContinue = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_deleteEcomContinue_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('deleteEcomContinue failed: unknown result');
};
AppConfigThriftServiceClient.prototype.getAppkeyPartTypes = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getAppkeyPartTypes(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getAppkeyPartTypes(req);
  }
};

AppConfigThriftServiceClient.prototype.send_getAppkeyPartTypes = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getAppkeyPartTypes', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_getAppkeyPartTypes_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_getAppkeyPartTypes = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_getAppkeyPartTypes_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getAppkeyPartTypes failed: unknown result');
};
AppConfigThriftServiceClient.prototype.saveMisAppKeys = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_saveMisAppKeys(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_saveMisAppKeys(req);
  }
};

AppConfigThriftServiceClient.prototype.send_saveMisAppKeys = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('saveMisAppKeys', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_saveMisAppKeys_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_saveMisAppKeys = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_saveMisAppKeys_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('saveMisAppKeys failed: unknown result');
};
AppConfigThriftServiceClient.prototype.grantMisAppKey = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_grantMisAppKey(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_grantMisAppKey(req);
  }
};

AppConfigThriftServiceClient.prototype.send_grantMisAppKey = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('grantMisAppKey', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_grantMisAppKey_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_grantMisAppKey = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_grantMisAppKey_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('grantMisAppKey failed: unknown result');
};
AppConfigThriftServiceClient.prototype.getMisAppkeys = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getMisAppkeys(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getMisAppkeys(req);
  }
};

AppConfigThriftServiceClient.prototype.send_getMisAppkeys = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getMisAppkeys', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_getMisAppkeys_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_getMisAppkeys = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_getMisAppkeys_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getMisAppkeys failed: unknown result');
};
AppConfigThriftServiceClient.prototype.getGrantMis = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getGrantMis(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getGrantMis(req);
  }
};

AppConfigThriftServiceClient.prototype.send_getGrantMis = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getGrantMis', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_getGrantMis_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_getGrantMis = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_getGrantMis_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getGrantMis failed: unknown result');
};
AppConfigThriftServiceClient.prototype.searchEcomAuth = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_searchEcomAuth(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_searchEcomAuth(req);
  }
};

AppConfigThriftServiceClient.prototype.send_searchEcomAuth = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('searchEcomAuth', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_searchEcomAuth_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_searchEcomAuth = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_searchEcomAuth_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('searchEcomAuth failed: unknown result');
};
AppConfigThriftServiceClient.prototype.batchGetGrantMis = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_batchGetGrantMis(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_batchGetGrantMis(req);
  }
};

AppConfigThriftServiceClient.prototype.send_batchGetGrantMis = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('batchGetGrantMis', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_batchGetGrantMis_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_batchGetGrantMis = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_batchGetGrantMis_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('batchGetGrantMis failed: unknown result');
};
AppConfigThriftServiceClient.prototype.getFeConfig = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getFeConfig(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getFeConfig(req);
  }
};

AppConfigThriftServiceClient.prototype.send_getFeConfig = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getFeConfig', Thrift.MessageType.CALL, this.seqid());
  var args = new AppConfigThriftService_getFeConfig_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

AppConfigThriftServiceClient.prototype.recv_getFeConfig = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new AppConfigThriftService_getFeConfig_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getFeConfig failed: unknown result');
};
var AppConfigThriftServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
AppConfigThriftServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

AppConfigThriftServiceProcessor.prototype.process_getAppConfigByAppKey = function(seqid, input, output) {
  var args = new AppConfigThriftService_getAppConfigByAppKey_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getAppConfigByAppKey.length === 1) {
    Q.fcall(this._handler.getAppConfigByAppKey, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_getAppConfigByAppKey_result({success: result});
        output.writeMessageBegin("getAppConfigByAppKey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_getAppConfigByAppKey_result(err);
        output.writeMessageBegin("getAppConfigByAppKey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getAppConfigByAppKey(args.req,  function (err, result) {
      var result = new AppConfigThriftService_getAppConfigByAppKey_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getAppConfigByAppKey", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_batchGetAppConfigByAppKeyList = function(seqid, input, output) {
  var args = new AppConfigThriftService_batchGetAppConfigByAppKeyList_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.batchGetAppConfigByAppKeyList.length === 1) {
    Q.fcall(this._handler.batchGetAppConfigByAppKeyList, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_batchGetAppConfigByAppKeyList_result({success: result});
        output.writeMessageBegin("batchGetAppConfigByAppKeyList", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_batchGetAppConfigByAppKeyList_result(err);
        output.writeMessageBegin("batchGetAppConfigByAppKeyList", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.batchGetAppConfigByAppKeyList(args.req,  function (err, result) {
      var result = new AppConfigThriftService_batchGetAppConfigByAppKeyList_result((err != null ? err : {success: result}));
      output.writeMessageBegin("batchGetAppConfigByAppKeyList", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_getAppkeysByOctoAppkey = function(seqid, input, output) {
  var args = new AppConfigThriftService_getAppkeysByOctoAppkey_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getAppkeysByOctoAppkey.length === 1) {
    Q.fcall(this._handler.getAppkeysByOctoAppkey, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_getAppkeysByOctoAppkey_result({success: result});
        output.writeMessageBegin("getAppkeysByOctoAppkey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_getAppkeysByOctoAppkey_result(err);
        output.writeMessageBegin("getAppkeysByOctoAppkey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getAppkeysByOctoAppkey(args.req,  function (err, result) {
      var result = new AppConfigThriftService_getAppkeysByOctoAppkey_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getAppkeysByOctoAppkey", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_batchGetAppkeysByOctoAppkey = function(seqid, input, output) {
  var args = new AppConfigThriftService_batchGetAppkeysByOctoAppkey_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.batchGetAppkeysByOctoAppkey.length === 1) {
    Q.fcall(this._handler.batchGetAppkeysByOctoAppkey, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_batchGetAppkeysByOctoAppkey_result({success: result});
        output.writeMessageBegin("batchGetAppkeysByOctoAppkey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_batchGetAppkeysByOctoAppkey_result(err);
        output.writeMessageBegin("batchGetAppkeysByOctoAppkey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.batchGetAppkeysByOctoAppkey(args.req,  function (err, result) {
      var result = new AppConfigThriftService_batchGetAppkeysByOctoAppkey_result((err != null ? err : {success: result}));
      output.writeMessageBegin("batchGetAppkeysByOctoAppkey", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_listAppKey = function(seqid, input, output) {
  var args = new AppConfigThriftService_listAppKey_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.listAppKey.length === 0) {
    Q.fcall(this._handler.listAppKey)
      .then(function(result) {
        var result = new AppConfigThriftService_listAppKey_result({success: result});
        output.writeMessageBegin("listAppKey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_listAppKey_result(err);
        output.writeMessageBegin("listAppKey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.listAppKey( function (err, result) {
      var result = new AppConfigThriftService_listAppKey_result((err != null ? err : {success: result}));
      output.writeMessageBegin("listAppKey", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_getEcomAuthByAppkey = function(seqid, input, output) {
  var args = new AppConfigThriftService_getEcomAuthByAppkey_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getEcomAuthByAppkey.length === 1) {
    Q.fcall(this._handler.getEcomAuthByAppkey, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_getEcomAuthByAppkey_result({success: result});
        output.writeMessageBegin("getEcomAuthByAppkey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_getEcomAuthByAppkey_result(err);
        output.writeMessageBegin("getEcomAuthByAppkey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getEcomAuthByAppkey(args.req,  function (err, result) {
      var result = new AppConfigThriftService_getEcomAuthByAppkey_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getEcomAuthByAppkey", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_getEcomAuthByOctoAppkey = function(seqid, input, output) {
  var args = new AppConfigThriftService_getEcomAuthByOctoAppkey_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getEcomAuthByOctoAppkey.length === 1) {
    Q.fcall(this._handler.getEcomAuthByOctoAppkey, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_getEcomAuthByOctoAppkey_result({success: result});
        output.writeMessageBegin("getEcomAuthByOctoAppkey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_getEcomAuthByOctoAppkey_result(err);
        output.writeMessageBegin("getEcomAuthByOctoAppkey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getEcomAuthByOctoAppkey(args.req,  function (err, result) {
      var result = new AppConfigThriftService_getEcomAuthByOctoAppkey_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getEcomAuthByOctoAppkey", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_modifyAppKey = function(seqid, input, output) {
  var args = new AppConfigThriftService_modifyAppKey_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.modifyAppKey.length === 1) {
    Q.fcall(this._handler.modifyAppKey, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_modifyAppKey_result({success: result});
        output.writeMessageBegin("modifyAppKey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_modifyAppKey_result(err);
        output.writeMessageBegin("modifyAppKey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.modifyAppKey(args.req,  function (err, result) {
      var result = new AppConfigThriftService_modifyAppKey_result((err != null ? err : {success: result}));
      output.writeMessageBegin("modifyAppKey", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_createAppKey = function(seqid, input, output) {
  var args = new AppConfigThriftService_createAppKey_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createAppKey.length === 1) {
    Q.fcall(this._handler.createAppKey, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_createAppKey_result({success: result});
        output.writeMessageBegin("createAppKey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_createAppKey_result(err);
        output.writeMessageBegin("createAppKey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.createAppKey(args.req,  function (err, result) {
      var result = new AppConfigThriftService_createAppKey_result((err != null ? err : {success: result}));
      output.writeMessageBegin("createAppKey", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_searchContinuesByAppkey = function(seqid, input, output) {
  var args = new AppConfigThriftService_searchContinuesByAppkey_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.searchContinuesByAppkey.length === 1) {
    Q.fcall(this._handler.searchContinuesByAppkey, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_searchContinuesByAppkey_result({success: result});
        output.writeMessageBegin("searchContinuesByAppkey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_searchContinuesByAppkey_result(err);
        output.writeMessageBegin("searchContinuesByAppkey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.searchContinuesByAppkey(args.req,  function (err, result) {
      var result = new AppConfigThriftService_searchContinuesByAppkey_result((err != null ? err : {success: result}));
      output.writeMessageBegin("searchContinuesByAppkey", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_getContinueByIds = function(seqid, input, output) {
  var args = new AppConfigThriftService_getContinueByIds_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getContinueByIds.length === 1) {
    Q.fcall(this._handler.getContinueByIds, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_getContinueByIds_result({success: result});
        output.writeMessageBegin("getContinueByIds", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_getContinueByIds_result(err);
        output.writeMessageBegin("getContinueByIds", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getContinueByIds(args.req,  function (err, result) {
      var result = new AppConfigThriftService_getContinueByIds_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getContinueByIds", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_addEcomContinue = function(seqid, input, output) {
  var args = new AppConfigThriftService_addEcomContinue_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.addEcomContinue.length === 1) {
    Q.fcall(this._handler.addEcomContinue, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_addEcomContinue_result({success: result});
        output.writeMessageBegin("addEcomContinue", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_addEcomContinue_result(err);
        output.writeMessageBegin("addEcomContinue", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.addEcomContinue(args.req,  function (err, result) {
      var result = new AppConfigThriftService_addEcomContinue_result((err != null ? err : {success: result}));
      output.writeMessageBegin("addEcomContinue", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_modifyEcomContinue = function(seqid, input, output) {
  var args = new AppConfigThriftService_modifyEcomContinue_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.modifyEcomContinue.length === 1) {
    Q.fcall(this._handler.modifyEcomContinue, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_modifyEcomContinue_result({success: result});
        output.writeMessageBegin("modifyEcomContinue", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_modifyEcomContinue_result(err);
        output.writeMessageBegin("modifyEcomContinue", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.modifyEcomContinue(args.req,  function (err, result) {
      var result = new AppConfigThriftService_modifyEcomContinue_result((err != null ? err : {success: result}));
      output.writeMessageBegin("modifyEcomContinue", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_modifySingleEcomContinue = function(seqid, input, output) {
  var args = new AppConfigThriftService_modifySingleEcomContinue_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.modifySingleEcomContinue.length === 1) {
    Q.fcall(this._handler.modifySingleEcomContinue, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_modifySingleEcomContinue_result({success: result});
        output.writeMessageBegin("modifySingleEcomContinue", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_modifySingleEcomContinue_result(err);
        output.writeMessageBegin("modifySingleEcomContinue", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.modifySingleEcomContinue(args.req,  function (err, result) {
      var result = new AppConfigThriftService_modifySingleEcomContinue_result((err != null ? err : {success: result}));
      output.writeMessageBegin("modifySingleEcomContinue", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_deleteEcomContinue = function(seqid, input, output) {
  var args = new AppConfigThriftService_deleteEcomContinue_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deleteEcomContinue.length === 1) {
    Q.fcall(this._handler.deleteEcomContinue, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_deleteEcomContinue_result({success: result});
        output.writeMessageBegin("deleteEcomContinue", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_deleteEcomContinue_result(err);
        output.writeMessageBegin("deleteEcomContinue", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.deleteEcomContinue(args.req,  function (err, result) {
      var result = new AppConfigThriftService_deleteEcomContinue_result((err != null ? err : {success: result}));
      output.writeMessageBegin("deleteEcomContinue", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_getAppkeyPartTypes = function(seqid, input, output) {
  var args = new AppConfigThriftService_getAppkeyPartTypes_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getAppkeyPartTypes.length === 1) {
    Q.fcall(this._handler.getAppkeyPartTypes, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_getAppkeyPartTypes_result({success: result});
        output.writeMessageBegin("getAppkeyPartTypes", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_getAppkeyPartTypes_result(err);
        output.writeMessageBegin("getAppkeyPartTypes", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getAppkeyPartTypes(args.req,  function (err, result) {
      var result = new AppConfigThriftService_getAppkeyPartTypes_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getAppkeyPartTypes", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_saveMisAppKeys = function(seqid, input, output) {
  var args = new AppConfigThriftService_saveMisAppKeys_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.saveMisAppKeys.length === 1) {
    Q.fcall(this._handler.saveMisAppKeys, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_saveMisAppKeys_result({success: result});
        output.writeMessageBegin("saveMisAppKeys", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_saveMisAppKeys_result(err);
        output.writeMessageBegin("saveMisAppKeys", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.saveMisAppKeys(args.req,  function (err, result) {
      var result = new AppConfigThriftService_saveMisAppKeys_result((err != null ? err : {success: result}));
      output.writeMessageBegin("saveMisAppKeys", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_grantMisAppKey = function(seqid, input, output) {
  var args = new AppConfigThriftService_grantMisAppKey_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.grantMisAppKey.length === 1) {
    Q.fcall(this._handler.grantMisAppKey, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_grantMisAppKey_result({success: result});
        output.writeMessageBegin("grantMisAppKey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_grantMisAppKey_result(err);
        output.writeMessageBegin("grantMisAppKey", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.grantMisAppKey(args.req,  function (err, result) {
      var result = new AppConfigThriftService_grantMisAppKey_result((err != null ? err : {success: result}));
      output.writeMessageBegin("grantMisAppKey", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_getMisAppkeys = function(seqid, input, output) {
  var args = new AppConfigThriftService_getMisAppkeys_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getMisAppkeys.length === 1) {
    Q.fcall(this._handler.getMisAppkeys, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_getMisAppkeys_result({success: result});
        output.writeMessageBegin("getMisAppkeys", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_getMisAppkeys_result(err);
        output.writeMessageBegin("getMisAppkeys", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getMisAppkeys(args.req,  function (err, result) {
      var result = new AppConfigThriftService_getMisAppkeys_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getMisAppkeys", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_getGrantMis = function(seqid, input, output) {
  var args = new AppConfigThriftService_getGrantMis_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getGrantMis.length === 1) {
    Q.fcall(this._handler.getGrantMis, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_getGrantMis_result({success: result});
        output.writeMessageBegin("getGrantMis", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_getGrantMis_result(err);
        output.writeMessageBegin("getGrantMis", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getGrantMis(args.req,  function (err, result) {
      var result = new AppConfigThriftService_getGrantMis_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getGrantMis", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_searchEcomAuth = function(seqid, input, output) {
  var args = new AppConfigThriftService_searchEcomAuth_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.searchEcomAuth.length === 1) {
    Q.fcall(this._handler.searchEcomAuth, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_searchEcomAuth_result({success: result});
        output.writeMessageBegin("searchEcomAuth", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_searchEcomAuth_result(err);
        output.writeMessageBegin("searchEcomAuth", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.searchEcomAuth(args.req,  function (err, result) {
      var result = new AppConfigThriftService_searchEcomAuth_result((err != null ? err : {success: result}));
      output.writeMessageBegin("searchEcomAuth", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_batchGetGrantMis = function(seqid, input, output) {
  var args = new AppConfigThriftService_batchGetGrantMis_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.batchGetGrantMis.length === 1) {
    Q.fcall(this._handler.batchGetGrantMis, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_batchGetGrantMis_result({success: result});
        output.writeMessageBegin("batchGetGrantMis", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_batchGetGrantMis_result(err);
        output.writeMessageBegin("batchGetGrantMis", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.batchGetGrantMis(args.req,  function (err, result) {
      var result = new AppConfigThriftService_batchGetGrantMis_result((err != null ? err : {success: result}));
      output.writeMessageBegin("batchGetGrantMis", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

AppConfigThriftServiceProcessor.prototype.process_getFeConfig = function(seqid, input, output) {
  var args = new AppConfigThriftService_getFeConfig_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getFeConfig.length === 1) {
    Q.fcall(this._handler.getFeConfig, args.req)
      .then(function(result) {
        var result = new AppConfigThriftService_getFeConfig_result({success: result});
        output.writeMessageBegin("getFeConfig", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new AppConfigThriftService_getFeConfig_result(err);
        output.writeMessageBegin("getFeConfig", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getFeConfig(args.req,  function (err, result) {
      var result = new AppConfigThriftService_getFeConfig_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getFeConfig", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

