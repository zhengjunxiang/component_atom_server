//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var CommonModel_ttypes = require('./CommonModel_types')


var ttypes = module.exports = {};
ttypes.WeChatFollowEnum = {
  'FOLLOW' : 0,
  'UN_FOLLOW' : 1
};
var BizAcctThirdTO = module.exports.BizAcctThirdTO = function(args) {
  this.bizAcctId = null;
  this.unionId = null;
  this.thirdPlatform = null;
  this.bgSource = null;
  this.bindSource = null;
  this.bindPlatform = null;
  if (args) {
    if (args.bizAcctId !== undefined) {
      this.bizAcctId = args.bizAcctId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bizAcctId is unset!');
    }
    if (args.unionId !== undefined) {
      this.unionId = args.unionId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field unionId is unset!');
    }
    if (args.thirdPlatform !== undefined) {
      this.thirdPlatform = args.thirdPlatform;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field thirdPlatform is unset!');
    }
    if (args.bgSource !== undefined) {
      this.bgSource = args.bgSource;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bgSource is unset!');
    }
    if (args.bindSource !== undefined) {
      this.bindSource = args.bindSource;
    }
    if (args.bindPlatform !== undefined) {
      this.bindPlatform = args.bindPlatform;
    }
  }
};
BizAcctThirdTO.prototype = {};
BizAcctThirdTO.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.bizAcctId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.unionId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.thirdPlatform = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.bgSource = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.bindSource = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.bindPlatform = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BizAcctThirdTO.prototype.write = function(output) {
  output.writeStructBegin('BizAcctThirdTO');
  if (this.bizAcctId !== null && this.bizAcctId !== undefined) {
    output.writeFieldBegin('bizAcctId', Thrift.Type.I32, 1);
    output.writeI32(this.bizAcctId);
    output.writeFieldEnd();
  }
  if (this.unionId !== null && this.unionId !== undefined) {
    output.writeFieldBegin('unionId', Thrift.Type.STRING, 2);
    output.writeString(this.unionId);
    output.writeFieldEnd();
  }
  if (this.thirdPlatform !== null && this.thirdPlatform !== undefined) {
    output.writeFieldBegin('thirdPlatform', Thrift.Type.I32, 3);
    output.writeI32(this.thirdPlatform);
    output.writeFieldEnd();
  }
  if (this.bgSource !== null && this.bgSource !== undefined) {
    output.writeFieldBegin('bgSource', Thrift.Type.I32, 4);
    output.writeI32(this.bgSource);
    output.writeFieldEnd();
  }
  if (this.bindSource !== null && this.bindSource !== undefined) {
    output.writeFieldBegin('bindSource', Thrift.Type.I32, 5);
    output.writeI32(this.bindSource);
    output.writeFieldEnd();
  }
  if (this.bindPlatform !== null && this.bindPlatform !== undefined) {
    output.writeFieldBegin('bindPlatform', Thrift.Type.I32, 6);
    output.writeI32(this.bindPlatform);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ThirdBizAcctInfoTO = module.exports.ThirdBizAcctInfoTO = function(args) {
  this.id = null;
  this.thirdPlatform = null;
  this.unionId = null;
  this.nickName = null;
  this.updateTime = null;
  this.headImg = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.thirdPlatform !== undefined) {
      this.thirdPlatform = args.thirdPlatform;
    }
    if (args.unionId !== undefined) {
      this.unionId = args.unionId;
    }
    if (args.nickName !== undefined) {
      this.nickName = args.nickName;
    }
    if (args.updateTime !== undefined) {
      this.updateTime = args.updateTime;
    }
    if (args.headImg !== undefined) {
      this.headImg = args.headImg;
    }
  }
};
ThirdBizAcctInfoTO.prototype = {};
ThirdBizAcctInfoTO.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.thirdPlatform = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.unionId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.nickName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I64) {
        this.updateTime = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.headImg = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdBizAcctInfoTO.prototype.write = function(output) {
  output.writeStructBegin('ThirdBizAcctInfoTO');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 1);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  if (this.thirdPlatform !== null && this.thirdPlatform !== undefined) {
    output.writeFieldBegin('thirdPlatform', Thrift.Type.I32, 2);
    output.writeI32(this.thirdPlatform);
    output.writeFieldEnd();
  }
  if (this.unionId !== null && this.unionId !== undefined) {
    output.writeFieldBegin('unionId', Thrift.Type.STRING, 3);
    output.writeString(this.unionId);
    output.writeFieldEnd();
  }
  if (this.nickName !== null && this.nickName !== undefined) {
    output.writeFieldBegin('nickName', Thrift.Type.STRING, 4);
    output.writeString(this.nickName);
    output.writeFieldEnd();
  }
  if (this.updateTime !== null && this.updateTime !== undefined) {
    output.writeFieldBegin('updateTime', Thrift.Type.I64, 5);
    output.writeI64(this.updateTime);
    output.writeFieldEnd();
  }
  if (this.headImg !== null && this.headImg !== undefined) {
    output.writeFieldBegin('headImg', Thrift.Type.STRING, 6);
    output.writeString(this.headImg);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ThirdBizAcctInfoTOField = module.exports.ThirdBizAcctInfoTOField = function(args) {
  this.nickName = null;
  this.headImg = null;
  this.unionId = null;
  if (args) {
    if (args.nickName !== undefined) {
      this.nickName = args.nickName;
    }
    if (args.headImg !== undefined) {
      this.headImg = args.headImg;
    }
    if (args.unionId !== undefined) {
      this.unionId = args.unionId;
    }
  }
};
ThirdBizAcctInfoTOField.prototype = {};
ThirdBizAcctInfoTOField.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.BOOL) {
        this.nickName = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.BOOL) {
        this.headImg = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.BOOL) {
        this.unionId = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdBizAcctInfoTOField.prototype.write = function(output) {
  output.writeStructBegin('ThirdBizAcctInfoTOField');
  if (this.nickName !== null && this.nickName !== undefined) {
    output.writeFieldBegin('nickName', Thrift.Type.BOOL, 1);
    output.writeBool(this.nickName);
    output.writeFieldEnd();
  }
  if (this.headImg !== null && this.headImg !== undefined) {
    output.writeFieldBegin('headImg', Thrift.Type.BOOL, 2);
    output.writeBool(this.headImg);
    output.writeFieldEnd();
  }
  if (this.unionId !== null && this.unionId !== undefined) {
    output.writeFieldBegin('unionId', Thrift.Type.BOOL, 3);
    output.writeBool(this.unionId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var BizAcctThirdBindingReq = module.exports.BizAcctThirdBindingReq = function(args) {
  this.bizAcctThirdTO = null;
  this.utmParam = null;
  if (args) {
    if (args.bizAcctThirdTO !== undefined) {
      this.bizAcctThirdTO = args.bizAcctThirdTO;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bizAcctThirdTO is unset!');
    }
    if (args.utmParam !== undefined) {
      this.utmParam = args.utmParam;
    }
  }
};
BizAcctThirdBindingReq.prototype = {};
BizAcctThirdBindingReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.bizAcctThirdTO = new ttypes.BizAcctThirdTO();
        this.bizAcctThirdTO.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.utmParam = new CommonModel_ttypes.UtmParamTO();
        this.utmParam.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BizAcctThirdBindingReq.prototype.write = function(output) {
  output.writeStructBegin('BizAcctThirdBindingReq');
  if (this.bizAcctThirdTO !== null && this.bizAcctThirdTO !== undefined) {
    output.writeFieldBegin('bizAcctThirdTO', Thrift.Type.STRUCT, 1);
    this.bizAcctThirdTO.write(output);
    output.writeFieldEnd();
  }
  if (this.utmParam !== null && this.utmParam !== undefined) {
    output.writeFieldBegin('utmParam', Thrift.Type.STRUCT, 2);
    this.utmParam.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var BizAcctThirdUnBindReq = module.exports.BizAcctThirdUnBindReq = function(args) {
  this.bizAcctId = null;
  this.bgSource = null;
  this.thirdPlatform = null;
  this.utmParam = null;
  if (args) {
    if (args.bizAcctId !== undefined) {
      this.bizAcctId = args.bizAcctId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bizAcctId is unset!');
    }
    if (args.bgSource !== undefined) {
      this.bgSource = args.bgSource;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bgSource is unset!');
    }
    if (args.thirdPlatform !== undefined) {
      this.thirdPlatform = args.thirdPlatform;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field thirdPlatform is unset!');
    }
    if (args.utmParam !== undefined) {
      this.utmParam = args.utmParam;
    }
  }
};
BizAcctThirdUnBindReq.prototype = {};
BizAcctThirdUnBindReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.bizAcctId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.bgSource = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.thirdPlatform = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.utmParam = new CommonModel_ttypes.UtmParamTO();
        this.utmParam.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BizAcctThirdUnBindReq.prototype.write = function(output) {
  output.writeStructBegin('BizAcctThirdUnBindReq');
  if (this.bizAcctId !== null && this.bizAcctId !== undefined) {
    output.writeFieldBegin('bizAcctId', Thrift.Type.I32, 1);
    output.writeI32(this.bizAcctId);
    output.writeFieldEnd();
  }
  if (this.bgSource !== null && this.bgSource !== undefined) {
    output.writeFieldBegin('bgSource', Thrift.Type.I32, 2);
    output.writeI32(this.bgSource);
    output.writeFieldEnd();
  }
  if (this.thirdPlatform !== null && this.thirdPlatform !== undefined) {
    output.writeFieldBegin('thirdPlatform', Thrift.Type.I32, 3);
    output.writeI32(this.thirdPlatform);
    output.writeFieldEnd();
  }
  if (this.utmParam !== null && this.utmParam !== undefined) {
    output.writeFieldBegin('utmParam', Thrift.Type.STRUCT, 4);
    this.utmParam.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var BizAcctThirdBindingInfoReq = module.exports.BizAcctThirdBindingInfoReq = function(args) {
  this.bizAcctId = null;
  this.unionId = null;
  this.thirdPlatform = null;
  this.bgSource = null;
  if (args) {
    if (args.bizAcctId !== undefined) {
      this.bizAcctId = args.bizAcctId;
    }
    if (args.unionId !== undefined) {
      this.unionId = args.unionId;
    }
    if (args.thirdPlatform !== undefined) {
      this.thirdPlatform = args.thirdPlatform;
    }
    if (args.bgSource !== undefined) {
      this.bgSource = args.bgSource;
    }
  }
};
BizAcctThirdBindingInfoReq.prototype = {};
BizAcctThirdBindingInfoReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.bizAcctId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.unionId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.thirdPlatform = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.bgSource = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BizAcctThirdBindingInfoReq.prototype.write = function(output) {
  output.writeStructBegin('BizAcctThirdBindingInfoReq');
  if (this.bizAcctId !== null && this.bizAcctId !== undefined) {
    output.writeFieldBegin('bizAcctId', Thrift.Type.I32, 1);
    output.writeI32(this.bizAcctId);
    output.writeFieldEnd();
  }
  if (this.unionId !== null && this.unionId !== undefined) {
    output.writeFieldBegin('unionId', Thrift.Type.STRING, 2);
    output.writeString(this.unionId);
    output.writeFieldEnd();
  }
  if (this.thirdPlatform !== null && this.thirdPlatform !== undefined) {
    output.writeFieldBegin('thirdPlatform', Thrift.Type.I32, 3);
    output.writeI32(this.thirdPlatform);
    output.writeFieldEnd();
  }
  if (this.bgSource !== null && this.bgSource !== undefined) {
    output.writeFieldBegin('bgSource', Thrift.Type.I32, 4);
    output.writeI32(this.bgSource);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var BizAcctThirdInfoResp = module.exports.BizAcctThirdInfoResp = function(args) {
  this.status = null;
  this.bizAcctThirdTO = null;
  if (args) {
    if (args.status !== undefined) {
      this.status = args.status;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field status is unset!');
    }
    if (args.bizAcctThirdTO !== undefined) {
      this.bizAcctThirdTO = args.bizAcctThirdTO;
    }
  }
};
BizAcctThirdInfoResp.prototype = {};
BizAcctThirdInfoResp.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.status = new CommonModel_ttypes.Status();
        this.status.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.bizAcctThirdTO = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new ttypes.BizAcctThirdTO();
          elem6.read(input);
          this.bizAcctThirdTO.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BizAcctThirdInfoResp.prototype.write = function(output) {
  output.writeStructBegin('BizAcctThirdInfoResp');
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.STRUCT, 1);
    this.status.write(output);
    output.writeFieldEnd();
  }
  if (this.bizAcctThirdTO !== null && this.bizAcctThirdTO !== undefined) {
    output.writeFieldBegin('bizAcctThirdTO', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.bizAcctThirdTO.length);
    for (var iter7 in this.bizAcctThirdTO)
    {
      if (this.bizAcctThirdTO.hasOwnProperty(iter7))
      {
        iter7 = this.bizAcctThirdTO[iter7];
        iter7.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var BizAcctThirdBindingResp = module.exports.BizAcctThirdBindingResp = function(args) {
  this.status = null;
  if (args) {
    if (args.status !== undefined) {
      this.status = args.status;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field status is unset!');
    }
  }
};
BizAcctThirdBindingResp.prototype = {};
BizAcctThirdBindingResp.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.status = new CommonModel_ttypes.Status();
        this.status.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BizAcctThirdBindingResp.prototype.write = function(output) {
  output.writeStructBegin('BizAcctThirdBindingResp');
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.STRUCT, 1);
    this.status.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var BizAcctThirdUnBindResp = module.exports.BizAcctThirdUnBindResp = function(args) {
  this.status = null;
  if (args) {
    if (args.status !== undefined) {
      this.status = args.status;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field status is unset!');
    }
  }
};
BizAcctThirdUnBindResp.prototype = {};
BizAcctThirdUnBindResp.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.status = new CommonModel_ttypes.Status();
        this.status.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BizAcctThirdUnBindResp.prototype.write = function(output) {
  output.writeStructBegin('BizAcctThirdUnBindResp');
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.STRUCT, 1);
    this.status.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var SaveThirdAcctInfoReq = module.exports.SaveThirdAcctInfoReq = function(args) {
  this.thirdBizAcctInfoTO = null;
  if (args) {
    if (args.thirdBizAcctInfoTO !== undefined) {
      this.thirdBizAcctInfoTO = args.thirdBizAcctInfoTO;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field thirdBizAcctInfoTO is unset!');
    }
  }
};
SaveThirdAcctInfoReq.prototype = {};
SaveThirdAcctInfoReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.thirdBizAcctInfoTO = new ttypes.ThirdBizAcctInfoTO();
        this.thirdBizAcctInfoTO.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

SaveThirdAcctInfoReq.prototype.write = function(output) {
  output.writeStructBegin('SaveThirdAcctInfoReq');
  if (this.thirdBizAcctInfoTO !== null && this.thirdBizAcctInfoTO !== undefined) {
    output.writeFieldBegin('thirdBizAcctInfoTO', Thrift.Type.STRUCT, 1);
    this.thirdBizAcctInfoTO.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var SaveThirdAcctInfoResp = module.exports.SaveThirdAcctInfoResp = function(args) {
  this.status = null;
  if (args) {
    if (args.status !== undefined) {
      this.status = args.status;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field status is unset!');
    }
  }
};
SaveThirdAcctInfoResp.prototype = {};
SaveThirdAcctInfoResp.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.status = new CommonModel_ttypes.Status();
        this.status.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

SaveThirdAcctInfoResp.prototype.write = function(output) {
  output.writeStructBegin('SaveThirdAcctInfoResp');
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.STRUCT, 1);
    this.status.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetThirdAcctInfoByBizAcctIdReq = module.exports.GetThirdAcctInfoByBizAcctIdReq = function(args) {
  this.bizAcctId = null;
  this.bgsource = null;
  this.thirdPlatform = null;
  this.fields = null;
  if (args) {
    if (args.bizAcctId !== undefined) {
      this.bizAcctId = args.bizAcctId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bizAcctId is unset!');
    }
    if (args.bgsource !== undefined) {
      this.bgsource = args.bgsource;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bgsource is unset!');
    }
    if (args.thirdPlatform !== undefined) {
      this.thirdPlatform = args.thirdPlatform;
    }
    if (args.fields !== undefined) {
      this.fields = args.fields;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field fields is unset!');
    }
  }
};
GetThirdAcctInfoByBizAcctIdReq.prototype = {};
GetThirdAcctInfoByBizAcctIdReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.bizAcctId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.bgsource = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.thirdPlatform = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = input.readI32();
          this.thirdPlatform.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.fields = new ttypes.ThirdBizAcctInfoTOField();
        this.fields.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetThirdAcctInfoByBizAcctIdReq.prototype.write = function(output) {
  output.writeStructBegin('GetThirdAcctInfoByBizAcctIdReq');
  if (this.bizAcctId !== null && this.bizAcctId !== undefined) {
    output.writeFieldBegin('bizAcctId', Thrift.Type.I32, 1);
    output.writeI32(this.bizAcctId);
    output.writeFieldEnd();
  }
  if (this.bgsource !== null && this.bgsource !== undefined) {
    output.writeFieldBegin('bgsource', Thrift.Type.I32, 2);
    output.writeI32(this.bgsource);
    output.writeFieldEnd();
  }
  if (this.thirdPlatform !== null && this.thirdPlatform !== undefined) {
    output.writeFieldBegin('thirdPlatform', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.I32, this.thirdPlatform.length);
    for (var iter15 in this.thirdPlatform)
    {
      if (this.thirdPlatform.hasOwnProperty(iter15))
      {
        iter15 = this.thirdPlatform[iter15];
        output.writeI32(iter15);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.fields !== null && this.fields !== undefined) {
    output.writeFieldBegin('fields', Thrift.Type.STRUCT, 4);
    this.fields.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetThirdAcctInfoByBizAcctIdResp = module.exports.GetThirdAcctInfoByBizAcctIdResp = function(args) {
  this.status = null;
  this.thirdBizAcctInfoTOs = null;
  if (args) {
    if (args.status !== undefined) {
      this.status = args.status;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field status is unset!');
    }
    if (args.thirdBizAcctInfoTOs !== undefined) {
      this.thirdBizAcctInfoTOs = args.thirdBizAcctInfoTOs;
    }
  }
};
GetThirdAcctInfoByBizAcctIdResp.prototype = {};
GetThirdAcctInfoByBizAcctIdResp.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.status = new CommonModel_ttypes.Status();
        this.status.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size16 = 0;
        var _rtmp320;
        this.thirdBizAcctInfoTOs = [];
        var _etype19 = 0;
        _rtmp320 = input.readListBegin();
        _etype19 = _rtmp320.etype;
        _size16 = _rtmp320.size;
        for (var _i21 = 0; _i21 < _size16; ++_i21)
        {
          var elem22 = null;
          elem22 = new ttypes.ThirdBizAcctInfoTO();
          elem22.read(input);
          this.thirdBizAcctInfoTOs.push(elem22);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetThirdAcctInfoByBizAcctIdResp.prototype.write = function(output) {
  output.writeStructBegin('GetThirdAcctInfoByBizAcctIdResp');
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.STRUCT, 1);
    this.status.write(output);
    output.writeFieldEnd();
  }
  if (this.thirdBizAcctInfoTOs !== null && this.thirdBizAcctInfoTOs !== undefined) {
    output.writeFieldBegin('thirdBizAcctInfoTOs', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.thirdBizAcctInfoTOs.length);
    for (var iter23 in this.thirdBizAcctInfoTOs)
    {
      if (this.thirdBizAcctInfoTOs.hasOwnProperty(iter23))
      {
        iter23 = this.thirdBizAcctInfoTOs[iter23];
        iter23.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var WeChatFollowReq = module.exports.WeChatFollowReq = function(args) {
  this.utmParam = null;
  this.appId = null;
  this.openId = null;
  if (args) {
    if (args.utmParam !== undefined) {
      this.utmParam = args.utmParam;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field utmParam is unset!');
    }
    if (args.appId !== undefined) {
      this.appId = args.appId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field appId is unset!');
    }
    if (args.openId !== undefined) {
      this.openId = args.openId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field openId is unset!');
    }
  }
};
WeChatFollowReq.prototype = {};
WeChatFollowReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.utmParam = new CommonModel_ttypes.UtmParamTO();
        this.utmParam.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.appId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.openId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WeChatFollowReq.prototype.write = function(output) {
  output.writeStructBegin('WeChatFollowReq');
  if (this.utmParam !== null && this.utmParam !== undefined) {
    output.writeFieldBegin('utmParam', Thrift.Type.STRUCT, 1);
    this.utmParam.write(output);
    output.writeFieldEnd();
  }
  if (this.appId !== null && this.appId !== undefined) {
    output.writeFieldBegin('appId', Thrift.Type.STRING, 2);
    output.writeString(this.appId);
    output.writeFieldEnd();
  }
  if (this.openId !== null && this.openId !== undefined) {
    output.writeFieldBegin('openId', Thrift.Type.STRING, 3);
    output.writeString(this.openId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var WeChatFollowV1Req = module.exports.WeChatFollowV1Req = function(args) {
  this.utmParam = null;
  this.appId = null;
  this.openId = null;
  this.unionId = null;
  if (args) {
    if (args.utmParam !== undefined) {
      this.utmParam = args.utmParam;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field utmParam is unset!');
    }
    if (args.appId !== undefined) {
      this.appId = args.appId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field appId is unset!');
    }
    if (args.openId !== undefined) {
      this.openId = args.openId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field openId is unset!');
    }
    if (args.unionId !== undefined) {
      this.unionId = args.unionId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field unionId is unset!');
    }
  }
};
WeChatFollowV1Req.prototype = {};
WeChatFollowV1Req.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.utmParam = new CommonModel_ttypes.UtmParamTO();
        this.utmParam.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.appId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.openId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.unionId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WeChatFollowV1Req.prototype.write = function(output) {
  output.writeStructBegin('WeChatFollowV1Req');
  if (this.utmParam !== null && this.utmParam !== undefined) {
    output.writeFieldBegin('utmParam', Thrift.Type.STRUCT, 1);
    this.utmParam.write(output);
    output.writeFieldEnd();
  }
  if (this.appId !== null && this.appId !== undefined) {
    output.writeFieldBegin('appId', Thrift.Type.STRING, 2);
    output.writeString(this.appId);
    output.writeFieldEnd();
  }
  if (this.openId !== null && this.openId !== undefined) {
    output.writeFieldBegin('openId', Thrift.Type.STRING, 3);
    output.writeString(this.openId);
    output.writeFieldEnd();
  }
  if (this.unionId !== null && this.unionId !== undefined) {
    output.writeFieldBegin('unionId', Thrift.Type.STRING, 4);
    output.writeString(this.unionId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var WeChatFollowBindingReq = module.exports.WeChatFollowBindingReq = function(args) {
  this.utmParam = null;
  this.appId = null;
  this.openId = null;
  this.bgSource = null;
  this.accessToken = null;
  this.isDpId = null;
  if (args) {
    if (args.utmParam !== undefined) {
      this.utmParam = args.utmParam;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field utmParam is unset!');
    }
    if (args.appId !== undefined) {
      this.appId = args.appId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field appId is unset!');
    }
    if (args.openId !== undefined) {
      this.openId = args.openId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field openId is unset!');
    }
    if (args.bgSource !== undefined) {
      this.bgSource = args.bgSource;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bgSource is unset!');
    }
    if (args.accessToken !== undefined) {
      this.accessToken = args.accessToken;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field accessToken is unset!');
    }
    if (args.isDpId !== undefined) {
      this.isDpId = args.isDpId;
    }
  }
};
WeChatFollowBindingReq.prototype = {};
WeChatFollowBindingReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.utmParam = new CommonModel_ttypes.UtmParamTO();
        this.utmParam.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.appId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.openId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.bgSource = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.accessToken = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.BOOL) {
        this.isDpId = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WeChatFollowBindingReq.prototype.write = function(output) {
  output.writeStructBegin('WeChatFollowBindingReq');
  if (this.utmParam !== null && this.utmParam !== undefined) {
    output.writeFieldBegin('utmParam', Thrift.Type.STRUCT, 1);
    this.utmParam.write(output);
    output.writeFieldEnd();
  }
  if (this.appId !== null && this.appId !== undefined) {
    output.writeFieldBegin('appId', Thrift.Type.STRING, 2);
    output.writeString(this.appId);
    output.writeFieldEnd();
  }
  if (this.openId !== null && this.openId !== undefined) {
    output.writeFieldBegin('openId', Thrift.Type.STRING, 3);
    output.writeString(this.openId);
    output.writeFieldEnd();
  }
  if (this.bgSource !== null && this.bgSource !== undefined) {
    output.writeFieldBegin('bgSource', Thrift.Type.I32, 4);
    output.writeI32(this.bgSource);
    output.writeFieldEnd();
  }
  if (this.accessToken !== null && this.accessToken !== undefined) {
    output.writeFieldBegin('accessToken', Thrift.Type.STRING, 5);
    output.writeString(this.accessToken);
    output.writeFieldEnd();
  }
  if (this.isDpId !== null && this.isDpId !== undefined) {
    output.writeFieldBegin('isDpId', Thrift.Type.BOOL, 6);
    output.writeBool(this.isDpId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var WeChatFollowBindingV1Req = module.exports.WeChatFollowBindingV1Req = function(args) {
  this.utmParam = null;
  this.appId = null;
  this.openId = null;
  this.unionId = null;
  this.bgSource = null;
  this.accessToken = null;
  if (args) {
    if (args.utmParam !== undefined) {
      this.utmParam = args.utmParam;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field utmParam is unset!');
    }
    if (args.appId !== undefined) {
      this.appId = args.appId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field appId is unset!');
    }
    if (args.openId !== undefined) {
      this.openId = args.openId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field openId is unset!');
    }
    if (args.unionId !== undefined) {
      this.unionId = args.unionId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field unionId is unset!');
    }
    if (args.bgSource !== undefined) {
      this.bgSource = args.bgSource;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bgSource is unset!');
    }
    if (args.accessToken !== undefined) {
      this.accessToken = args.accessToken;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field accessToken is unset!');
    }
  }
};
WeChatFollowBindingV1Req.prototype = {};
WeChatFollowBindingV1Req.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.utmParam = new CommonModel_ttypes.UtmParamTO();
        this.utmParam.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.appId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.openId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.unionId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.bgSource = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.accessToken = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WeChatFollowBindingV1Req.prototype.write = function(output) {
  output.writeStructBegin('WeChatFollowBindingV1Req');
  if (this.utmParam !== null && this.utmParam !== undefined) {
    output.writeFieldBegin('utmParam', Thrift.Type.STRUCT, 1);
    this.utmParam.write(output);
    output.writeFieldEnd();
  }
  if (this.appId !== null && this.appId !== undefined) {
    output.writeFieldBegin('appId', Thrift.Type.STRING, 2);
    output.writeString(this.appId);
    output.writeFieldEnd();
  }
  if (this.openId !== null && this.openId !== undefined) {
    output.writeFieldBegin('openId', Thrift.Type.STRING, 3);
    output.writeString(this.openId);
    output.writeFieldEnd();
  }
  if (this.unionId !== null && this.unionId !== undefined) {
    output.writeFieldBegin('unionId', Thrift.Type.STRING, 4);
    output.writeString(this.unionId);
    output.writeFieldEnd();
  }
  if (this.bgSource !== null && this.bgSource !== undefined) {
    output.writeFieldBegin('bgSource', Thrift.Type.I32, 5);
    output.writeI32(this.bgSource);
    output.writeFieldEnd();
  }
  if (this.accessToken !== null && this.accessToken !== undefined) {
    output.writeFieldBegin('accessToken', Thrift.Type.STRING, 6);
    output.writeString(this.accessToken);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var WeChatFollowBindingImport = module.exports.WeChatFollowBindingImport = function(args) {
  this.appId = null;
  this.openId = null;
  this.unionId = null;
  this.bgSource = null;
  this.bizAcctId = null;
  this.isDpId = null;
  if (args) {
    if (args.appId !== undefined) {
      this.appId = args.appId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field appId is unset!');
    }
    if (args.openId !== undefined) {
      this.openId = args.openId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field openId is unset!');
    }
    if (args.unionId !== undefined) {
      this.unionId = args.unionId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field unionId is unset!');
    }
    if (args.bgSource !== undefined) {
      this.bgSource = args.bgSource;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bgSource is unset!');
    }
    if (args.bizAcctId !== undefined) {
      this.bizAcctId = args.bizAcctId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bizAcctId is unset!');
    }
    if (args.isDpId !== undefined) {
      this.isDpId = args.isDpId;
    }
  }
};
WeChatFollowBindingImport.prototype = {};
WeChatFollowBindingImport.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.appId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.openId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.unionId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.bgSource = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.bizAcctId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.BOOL) {
        this.isDpId = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WeChatFollowBindingImport.prototype.write = function(output) {
  output.writeStructBegin('WeChatFollowBindingImport');
  if (this.appId !== null && this.appId !== undefined) {
    output.writeFieldBegin('appId', Thrift.Type.STRING, 1);
    output.writeString(this.appId);
    output.writeFieldEnd();
  }
  if (this.openId !== null && this.openId !== undefined) {
    output.writeFieldBegin('openId', Thrift.Type.STRING, 2);
    output.writeString(this.openId);
    output.writeFieldEnd();
  }
  if (this.unionId !== null && this.unionId !== undefined) {
    output.writeFieldBegin('unionId', Thrift.Type.STRING, 3);
    output.writeString(this.unionId);
    output.writeFieldEnd();
  }
  if (this.bgSource !== null && this.bgSource !== undefined) {
    output.writeFieldBegin('bgSource', Thrift.Type.I32, 4);
    output.writeI32(this.bgSource);
    output.writeFieldEnd();
  }
  if (this.bizAcctId !== null && this.bizAcctId !== undefined) {
    output.writeFieldBegin('bizAcctId', Thrift.Type.I32, 5);
    output.writeI32(this.bizAcctId);
    output.writeFieldEnd();
  }
  if (this.isDpId !== null && this.isDpId !== undefined) {
    output.writeFieldBegin('isDpId', Thrift.Type.BOOL, 6);
    output.writeBool(this.isDpId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var WeChatUnFollowReq = module.exports.WeChatUnFollowReq = function(args) {
  this.utmParam = null;
  this.appId = null;
  this.openId = null;
  if (args) {
    if (args.utmParam !== undefined) {
      this.utmParam = args.utmParam;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field utmParam is unset!');
    }
    if (args.appId !== undefined) {
      this.appId = args.appId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field appId is unset!');
    }
    if (args.openId !== undefined) {
      this.openId = args.openId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field openId is unset!');
    }
  }
};
WeChatUnFollowReq.prototype = {};
WeChatUnFollowReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.utmParam = new CommonModel_ttypes.UtmParamTO();
        this.utmParam.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.appId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.openId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WeChatUnFollowReq.prototype.write = function(output) {
  output.writeStructBegin('WeChatUnFollowReq');
  if (this.utmParam !== null && this.utmParam !== undefined) {
    output.writeFieldBegin('utmParam', Thrift.Type.STRUCT, 1);
    this.utmParam.write(output);
    output.writeFieldEnd();
  }
  if (this.appId !== null && this.appId !== undefined) {
    output.writeFieldBegin('appId', Thrift.Type.STRING, 2);
    output.writeString(this.appId);
    output.writeFieldEnd();
  }
  if (this.openId !== null && this.openId !== undefined) {
    output.writeFieldBegin('openId', Thrift.Type.STRING, 3);
    output.writeString(this.openId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetWeChatInfoReq = module.exports.GetWeChatInfoReq = function(args) {
  this.appId = null;
  this.bgSource = null;
  this.bizAcctId = null;
  if (args) {
    if (args.appId !== undefined) {
      this.appId = args.appId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field appId is unset!');
    }
    if (args.bgSource !== undefined) {
      this.bgSource = args.bgSource;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bgSource is unset!');
    }
    if (args.bizAcctId !== undefined) {
      this.bizAcctId = args.bizAcctId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bizAcctId is unset!');
    }
  }
};
GetWeChatInfoReq.prototype = {};
GetWeChatInfoReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.appId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.bgSource = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.bizAcctId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetWeChatInfoReq.prototype.write = function(output) {
  output.writeStructBegin('GetWeChatInfoReq');
  if (this.appId !== null && this.appId !== undefined) {
    output.writeFieldBegin('appId', Thrift.Type.STRING, 1);
    output.writeString(this.appId);
    output.writeFieldEnd();
  }
  if (this.bgSource !== null && this.bgSource !== undefined) {
    output.writeFieldBegin('bgSource', Thrift.Type.I32, 2);
    output.writeI32(this.bgSource);
    output.writeFieldEnd();
  }
  if (this.bizAcctId !== null && this.bizAcctId !== undefined) {
    output.writeFieldBegin('bizAcctId', Thrift.Type.I32, 3);
    output.writeI32(this.bizAcctId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var BatchGetWeChatInfoReq = module.exports.BatchGetWeChatInfoReq = function(args) {
  this.appId = null;
  this.bgSource = null;
  this.bizAcctIds = null;
  if (args) {
    if (args.appId !== undefined) {
      this.appId = args.appId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field appId is unset!');
    }
    if (args.bgSource !== undefined) {
      this.bgSource = args.bgSource;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bgSource is unset!');
    }
    if (args.bizAcctIds !== undefined) {
      this.bizAcctIds = args.bizAcctIds;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bizAcctIds is unset!');
    }
  }
};
BatchGetWeChatInfoReq.prototype = {};
BatchGetWeChatInfoReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.appId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.bgSource = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.SET) {
        var _size24 = 0;
        var _rtmp328;
        this.bizAcctIds = [];
        var _etype27 = 0;
        _rtmp328 = input.readSetBegin();
        _etype27 = _rtmp328.etype;
        _size24 = _rtmp328.size;
        for (var _i29 = 0; _i29 < _size24; ++_i29)
        {
          var elem30 = null;
          elem30 = input.readI32();
          this.bizAcctIds.push(elem30);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BatchGetWeChatInfoReq.prototype.write = function(output) {
  output.writeStructBegin('BatchGetWeChatInfoReq');
  if (this.appId !== null && this.appId !== undefined) {
    output.writeFieldBegin('appId', Thrift.Type.STRING, 1);
    output.writeString(this.appId);
    output.writeFieldEnd();
  }
  if (this.bgSource !== null && this.bgSource !== undefined) {
    output.writeFieldBegin('bgSource', Thrift.Type.I32, 2);
    output.writeI32(this.bgSource);
    output.writeFieldEnd();
  }
  if (this.bizAcctIds !== null && this.bizAcctIds !== undefined) {
    output.writeFieldBegin('bizAcctIds', Thrift.Type.SET, 3);
    output.writeSetBegin(Thrift.Type.I32, this.bizAcctIds.length);
    for (var iter31 in this.bizAcctIds)
    {
      if (this.bizAcctIds.hasOwnProperty(iter31))
      {
        iter31 = this.bizAcctIds[iter31];
        output.writeI32(iter31);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetWeChatAccessTokenReq = module.exports.GetWeChatAccessTokenReq = function(args) {
  this.appId = null;
  if (args) {
    if (args.appId !== undefined) {
      this.appId = args.appId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field appId is unset!');
    }
  }
};
GetWeChatAccessTokenReq.prototype = {};
GetWeChatAccessTokenReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.appId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetWeChatAccessTokenReq.prototype.write = function(output) {
  output.writeStructBegin('GetWeChatAccessTokenReq');
  if (this.appId !== null && this.appId !== undefined) {
    output.writeFieldBegin('appId', Thrift.Type.STRING, 1);
    output.writeString(this.appId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var WeChatInfoTO = module.exports.WeChatInfoTO = function(args) {
  this.openId = null;
  this.bizAcctId = null;
  this.status = null;
  if (args) {
    if (args.openId !== undefined) {
      this.openId = args.openId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field openId is unset!');
    }
    if (args.bizAcctId !== undefined) {
      this.bizAcctId = args.bizAcctId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field bizAcctId is unset!');
    }
    if (args.status !== undefined) {
      this.status = args.status;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field status is unset!');
    }
  }
};
WeChatInfoTO.prototype = {};
WeChatInfoTO.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.openId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.bizAcctId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WeChatInfoTO.prototype.write = function(output) {
  output.writeStructBegin('WeChatInfoTO');
  if (this.openId !== null && this.openId !== undefined) {
    output.writeFieldBegin('openId', Thrift.Type.STRING, 1);
    output.writeString(this.openId);
    output.writeFieldEnd();
  }
  if (this.bizAcctId !== null && this.bizAcctId !== undefined) {
    output.writeFieldBegin('bizAcctId', Thrift.Type.I32, 2);
    output.writeI32(this.bizAcctId);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 3);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var WeChatFollowTO = module.exports.WeChatFollowTO = function(args) {
  this.appID = null;
  this.openId = null;
  this.unionId = null;
  this.status = null;
  if (args) {
    if (args.appID !== undefined) {
      this.appID = args.appID;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field appID is unset!');
    }
    if (args.openId !== undefined) {
      this.openId = args.openId;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field openId is unset!');
    }
    if (args.unionId !== undefined) {
      this.unionId = args.unionId;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field status is unset!');
    }
  }
};
WeChatFollowTO.prototype = {};
WeChatFollowTO.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.appID = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.openId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.unionId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WeChatFollowTO.prototype.write = function(output) {
  output.writeStructBegin('WeChatFollowTO');
  if (this.appID !== null && this.appID !== undefined) {
    output.writeFieldBegin('appID', Thrift.Type.STRING, 1);
    output.writeString(this.appID);
    output.writeFieldEnd();
  }
  if (this.openId !== null && this.openId !== undefined) {
    output.writeFieldBegin('openId', Thrift.Type.STRING, 2);
    output.writeString(this.openId);
    output.writeFieldEnd();
  }
  if (this.unionId !== null && this.unionId !== undefined) {
    output.writeFieldBegin('unionId', Thrift.Type.STRING, 3);
    output.writeString(this.unionId);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 4);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var WeChatFollowResp = module.exports.WeChatFollowResp = function(args) {
  this.status = null;
  if (args) {
    if (args.status !== undefined) {
      this.status = args.status;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field status is unset!');
    }
  }
};
WeChatFollowResp.prototype = {};
WeChatFollowResp.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.status = new CommonModel_ttypes.Status();
        this.status.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WeChatFollowResp.prototype.write = function(output) {
  output.writeStructBegin('WeChatFollowResp');
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.STRUCT, 1);
    this.status.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var WeChatUnFollowResp = module.exports.WeChatUnFollowResp = function(args) {
  this.status = null;
  if (args) {
    if (args.status !== undefined) {
      this.status = args.status;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field status is unset!');
    }
  }
};
WeChatUnFollowResp.prototype = {};
WeChatUnFollowResp.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.status = new CommonModel_ttypes.Status();
        this.status.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WeChatUnFollowResp.prototype.write = function(output) {
  output.writeStructBegin('WeChatUnFollowResp');
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.STRUCT, 1);
    this.status.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetWeChatInfoResp = module.exports.GetWeChatInfoResp = function(args) {
  this.status = null;
  this.weChatInfo = null;
  if (args) {
    if (args.status !== undefined) {
      this.status = args.status;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field status is unset!');
    }
    if (args.weChatInfo !== undefined) {
      this.weChatInfo = args.weChatInfo;
    }
  }
};
GetWeChatInfoResp.prototype = {};
GetWeChatInfoResp.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.status = new CommonModel_ttypes.Status();
        this.status.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.weChatInfo = new ttypes.WeChatInfoTO();
        this.weChatInfo.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetWeChatInfoResp.prototype.write = function(output) {
  output.writeStructBegin('GetWeChatInfoResp');
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.STRUCT, 1);
    this.status.write(output);
    output.writeFieldEnd();
  }
  if (this.weChatInfo !== null && this.weChatInfo !== undefined) {
    output.writeFieldBegin('weChatInfo', Thrift.Type.STRUCT, 2);
    this.weChatInfo.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var BatchGetWeChatInfoResp = module.exports.BatchGetWeChatInfoResp = function(args) {
  this.status = null;
  this.weChatInfo = null;
  if (args) {
    if (args.status !== undefined) {
      this.status = args.status;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field status is unset!');
    }
    if (args.weChatInfo !== undefined) {
      this.weChatInfo = args.weChatInfo;
    }
  }
};
BatchGetWeChatInfoResp.prototype = {};
BatchGetWeChatInfoResp.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.status = new CommonModel_ttypes.Status();
        this.status.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size32 = 0;
        var _rtmp336;
        this.weChatInfo = [];
        var _etype35 = 0;
        _rtmp336 = input.readListBegin();
        _etype35 = _rtmp336.etype;
        _size32 = _rtmp336.size;
        for (var _i37 = 0; _i37 < _size32; ++_i37)
        {
          var elem38 = null;
          elem38 = new ttypes.WeChatInfoTO();
          elem38.read(input);
          this.weChatInfo.push(elem38);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BatchGetWeChatInfoResp.prototype.write = function(output) {
  output.writeStructBegin('BatchGetWeChatInfoResp');
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.STRUCT, 1);
    this.status.write(output);
    output.writeFieldEnd();
  }
  if (this.weChatInfo !== null && this.weChatInfo !== undefined) {
    output.writeFieldBegin('weChatInfo', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.weChatInfo.length);
    for (var iter39 in this.weChatInfo)
    {
      if (this.weChatInfo.hasOwnProperty(iter39))
      {
        iter39 = this.weChatInfo[iter39];
        iter39.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var BatchGetWeChatFollowResp = module.exports.BatchGetWeChatFollowResp = function(args) {
  this.status = null;
  this.weChatFollow = null;
  if (args) {
    if (args.status !== undefined) {
      this.status = args.status;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field status is unset!');
    }
    if (args.weChatFollow !== undefined) {
      this.weChatFollow = args.weChatFollow;
    }
  }
};
BatchGetWeChatFollowResp.prototype = {};
BatchGetWeChatFollowResp.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.status = new CommonModel_ttypes.Status();
        this.status.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size40 = 0;
        var _rtmp344;
        this.weChatFollow = [];
        var _etype43 = 0;
        _rtmp344 = input.readListBegin();
        _etype43 = _rtmp344.etype;
        _size40 = _rtmp344.size;
        for (var _i45 = 0; _i45 < _size40; ++_i45)
        {
          var elem46 = null;
          elem46 = new ttypes.WeChatFollowTO();
          elem46.read(input);
          this.weChatFollow.push(elem46);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BatchGetWeChatFollowResp.prototype.write = function(output) {
  output.writeStructBegin('BatchGetWeChatFollowResp');
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.STRUCT, 1);
    this.status.write(output);
    output.writeFieldEnd();
  }
  if (this.weChatFollow !== null && this.weChatFollow !== undefined) {
    output.writeFieldBegin('weChatFollow', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.weChatFollow.length);
    for (var iter47 in this.weChatFollow)
    {
      if (this.weChatFollow.hasOwnProperty(iter47))
      {
        iter47 = this.weChatFollow[iter47];
        iter47.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetWeChatAccessTokenResp = module.exports.GetWeChatAccessTokenResp = function(args) {
  this.status = null;
  this.accessToken = null;
  if (args) {
    if (args.status !== undefined) {
      this.status = args.status;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field status is unset!');
    }
    if (args.accessToken !== undefined) {
      this.accessToken = args.accessToken;
    }
  }
};
GetWeChatAccessTokenResp.prototype = {};
GetWeChatAccessTokenResp.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.status = new CommonModel_ttypes.Status();
        this.status.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.accessToken = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetWeChatAccessTokenResp.prototype.write = function(output) {
  output.writeStructBegin('GetWeChatAccessTokenResp');
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.STRUCT, 1);
    this.status.write(output);
    output.writeFieldEnd();
  }
  if (this.accessToken !== null && this.accessToken !== undefined) {
    output.writeFieldBegin('accessToken', Thrift.Type.STRING, 2);
    output.writeString(this.accessToken);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

