//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var CommonModel_ttypes = require('./CommonModel_types')
var EPassportEcomAuditServiceModel_ttypes = require('./EPassportEcomAuditServiceModel_types')


var ttypes = require('./EPassportEcomAuditService_types');
//HELPER FUNCTIONS AND STRUCTURES

var EPassportEcomAuditService_createEcomAudit_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
EPassportEcomAuditService_createEcomAudit_args.prototype = {};
EPassportEcomAuditService_createEcomAudit_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new EPassportEcomAuditServiceModel_ttypes.CreateEcomAuditReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_createEcomAudit_args.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_createEcomAudit_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_createEcomAudit_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EPassportEcomAuditService_createEcomAudit_result.prototype = {};
EPassportEcomAuditService_createEcomAudit_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new EPassportEcomAuditServiceModel_ttypes.CreateEcomAuditResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_createEcomAudit_result.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_createEcomAudit_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_queryEcomAuditList_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
EPassportEcomAuditService_queryEcomAuditList_args.prototype = {};
EPassportEcomAuditService_queryEcomAuditList_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new EPassportEcomAuditServiceModel_ttypes.QueryEcomAuditListByMisReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_queryEcomAuditList_args.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_queryEcomAuditList_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_queryEcomAuditList_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EPassportEcomAuditService_queryEcomAuditList_result.prototype = {};
EPassportEcomAuditService_queryEcomAuditList_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new EPassportEcomAuditServiceModel_ttypes.QueryEcomAuditListByMisResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_queryEcomAuditList_result.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_queryEcomAuditList_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_queryEcomAuditItem_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
EPassportEcomAuditService_queryEcomAuditItem_args.prototype = {};
EPassportEcomAuditService_queryEcomAuditItem_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new EPassportEcomAuditServiceModel_ttypes.QueryEcomAuditListByIdListReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_queryEcomAuditItem_args.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_queryEcomAuditItem_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_queryEcomAuditItem_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EPassportEcomAuditService_queryEcomAuditItem_result.prototype = {};
EPassportEcomAuditService_queryEcomAuditItem_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new EPassportEcomAuditServiceModel_ttypes.QueryEcomAuditListByIdListResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_queryEcomAuditItem_result.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_queryEcomAuditItem_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_modifyEcomAudit_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
EPassportEcomAuditService_modifyEcomAudit_args.prototype = {};
EPassportEcomAuditService_modifyEcomAudit_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new EPassportEcomAuditServiceModel_ttypes.ModifyEcomAuditReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_modifyEcomAudit_args.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_modifyEcomAudit_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_modifyEcomAudit_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EPassportEcomAuditService_modifyEcomAudit_result.prototype = {};
EPassportEcomAuditService_modifyEcomAudit_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommonModel_ttypes.CommonResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_modifyEcomAudit_result.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_modifyEcomAudit_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_createCustomerFindAudit_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
EPassportEcomAuditService_createCustomerFindAudit_args.prototype = {};
EPassportEcomAuditService_createCustomerFindAudit_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new EPassportEcomAuditServiceModel_ttypes.CreateCustomerAuditReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_createCustomerFindAudit_args.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_createCustomerFindAudit_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_createCustomerFindAudit_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EPassportEcomAuditService_createCustomerFindAudit_result.prototype = {};
EPassportEcomAuditService_createCustomerFindAudit_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new EPassportEcomAuditServiceModel_ttypes.CreateEcomAuditResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_createCustomerFindAudit_result.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_createCustomerFindAudit_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_queryCustomerFindAudit_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
EPassportEcomAuditService_queryCustomerFindAudit_args.prototype = {};
EPassportEcomAuditService_queryCustomerFindAudit_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new EPassportEcomAuditServiceModel_ttypes.QueryCustomerAuditReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_queryCustomerFindAudit_args.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_queryCustomerFindAudit_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_queryCustomerFindAudit_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EPassportEcomAuditService_queryCustomerFindAudit_result.prototype = {};
EPassportEcomAuditService_queryCustomerFindAudit_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new EPassportEcomAuditServiceModel_ttypes.QueryCustomerAuditResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_queryCustomerFindAudit_result.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_queryCustomerFindAudit_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_createModifyMobileAudit_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
EPassportEcomAuditService_createModifyMobileAudit_args.prototype = {};
EPassportEcomAuditService_createModifyMobileAudit_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new EPassportEcomAuditServiceModel_ttypes.CreateModifyMobileAuditReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_createModifyMobileAudit_args.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_createModifyMobileAudit_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_createModifyMobileAudit_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EPassportEcomAuditService_createModifyMobileAudit_result.prototype = {};
EPassportEcomAuditService_createModifyMobileAudit_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new EPassportEcomAuditServiceModel_ttypes.CreateModifyMobileAuditResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_createModifyMobileAudit_result.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_createModifyMobileAudit_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_updateModifyMobileAudit_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
EPassportEcomAuditService_updateModifyMobileAudit_args.prototype = {};
EPassportEcomAuditService_updateModifyMobileAudit_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new EPassportEcomAuditServiceModel_ttypes.UpdateModifyMobileAuditReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_updateModifyMobileAudit_args.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_updateModifyMobileAudit_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_updateModifyMobileAudit_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EPassportEcomAuditService_updateModifyMobileAudit_result.prototype = {};
EPassportEcomAuditService_updateModifyMobileAudit_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommonModel_ttypes.CommonResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_updateModifyMobileAudit_result.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_updateModifyMobileAudit_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_queryModifyMobileAudit_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
EPassportEcomAuditService_queryModifyMobileAudit_args.prototype = {};
EPassportEcomAuditService_queryModifyMobileAudit_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new EPassportEcomAuditServiceModel_ttypes.QueryModifyMobileAuditReq();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_queryModifyMobileAudit_args.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_queryModifyMobileAudit_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditService_queryModifyMobileAudit_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EPassportEcomAuditService_queryModifyMobileAudit_result.prototype = {};
EPassportEcomAuditService_queryModifyMobileAudit_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new EPassportEcomAuditServiceModel_ttypes.QueryModifyMobileAuditResp();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EPassportEcomAuditService_queryModifyMobileAudit_result.prototype.write = function(output) {
  output.writeStructBegin('EPassportEcomAuditService_queryModifyMobileAudit_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EPassportEcomAuditServiceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
EPassportEcomAuditServiceClient.prototype = {};
EPassportEcomAuditServiceClient.prototype.seqid = function() { return this._seqid; }
EPassportEcomAuditServiceClient.prototype.new_seqid = function() { return this._seqid += 1; }
EPassportEcomAuditServiceClient.prototype.createEcomAudit = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createEcomAudit(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createEcomAudit(req);
  }
};

EPassportEcomAuditServiceClient.prototype.send_createEcomAudit = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('createEcomAudit', Thrift.MessageType.CALL, this.seqid());
  var args = new EPassportEcomAuditService_createEcomAudit_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EPassportEcomAuditServiceClient.prototype.recv_createEcomAudit = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EPassportEcomAuditService_createEcomAudit_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createEcomAudit failed: unknown result');
};
EPassportEcomAuditServiceClient.prototype.queryEcomAuditList = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_queryEcomAuditList(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_queryEcomAuditList(req);
  }
};

EPassportEcomAuditServiceClient.prototype.send_queryEcomAuditList = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('queryEcomAuditList', Thrift.MessageType.CALL, this.seqid());
  var args = new EPassportEcomAuditService_queryEcomAuditList_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EPassportEcomAuditServiceClient.prototype.recv_queryEcomAuditList = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EPassportEcomAuditService_queryEcomAuditList_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('queryEcomAuditList failed: unknown result');
};
EPassportEcomAuditServiceClient.prototype.queryEcomAuditItem = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_queryEcomAuditItem(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_queryEcomAuditItem(req);
  }
};

EPassportEcomAuditServiceClient.prototype.send_queryEcomAuditItem = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('queryEcomAuditItem', Thrift.MessageType.CALL, this.seqid());
  var args = new EPassportEcomAuditService_queryEcomAuditItem_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EPassportEcomAuditServiceClient.prototype.recv_queryEcomAuditItem = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EPassportEcomAuditService_queryEcomAuditItem_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('queryEcomAuditItem failed: unknown result');
};
EPassportEcomAuditServiceClient.prototype.modifyEcomAudit = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_modifyEcomAudit(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_modifyEcomAudit(req);
  }
};

EPassportEcomAuditServiceClient.prototype.send_modifyEcomAudit = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('modifyEcomAudit', Thrift.MessageType.CALL, this.seqid());
  var args = new EPassportEcomAuditService_modifyEcomAudit_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EPassportEcomAuditServiceClient.prototype.recv_modifyEcomAudit = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EPassportEcomAuditService_modifyEcomAudit_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('modifyEcomAudit failed: unknown result');
};
EPassportEcomAuditServiceClient.prototype.createCustomerFindAudit = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createCustomerFindAudit(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createCustomerFindAudit(req);
  }
};

EPassportEcomAuditServiceClient.prototype.send_createCustomerFindAudit = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('createCustomerFindAudit', Thrift.MessageType.CALL, this.seqid());
  var args = new EPassportEcomAuditService_createCustomerFindAudit_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EPassportEcomAuditServiceClient.prototype.recv_createCustomerFindAudit = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EPassportEcomAuditService_createCustomerFindAudit_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createCustomerFindAudit failed: unknown result');
};
EPassportEcomAuditServiceClient.prototype.queryCustomerFindAudit = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_queryCustomerFindAudit(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_queryCustomerFindAudit(req);
  }
};

EPassportEcomAuditServiceClient.prototype.send_queryCustomerFindAudit = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('queryCustomerFindAudit', Thrift.MessageType.CALL, this.seqid());
  var args = new EPassportEcomAuditService_queryCustomerFindAudit_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EPassportEcomAuditServiceClient.prototype.recv_queryCustomerFindAudit = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EPassportEcomAuditService_queryCustomerFindAudit_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('queryCustomerFindAudit failed: unknown result');
};
EPassportEcomAuditServiceClient.prototype.createModifyMobileAudit = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createModifyMobileAudit(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createModifyMobileAudit(req);
  }
};

EPassportEcomAuditServiceClient.prototype.send_createModifyMobileAudit = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('createModifyMobileAudit', Thrift.MessageType.CALL, this.seqid());
  var args = new EPassportEcomAuditService_createModifyMobileAudit_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EPassportEcomAuditServiceClient.prototype.recv_createModifyMobileAudit = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EPassportEcomAuditService_createModifyMobileAudit_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('createModifyMobileAudit failed: unknown result');
};
EPassportEcomAuditServiceClient.prototype.updateModifyMobileAudit = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_updateModifyMobileAudit(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_updateModifyMobileAudit(req);
  }
};

EPassportEcomAuditServiceClient.prototype.send_updateModifyMobileAudit = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('updateModifyMobileAudit', Thrift.MessageType.CALL, this.seqid());
  var args = new EPassportEcomAuditService_updateModifyMobileAudit_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EPassportEcomAuditServiceClient.prototype.recv_updateModifyMobileAudit = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EPassportEcomAuditService_updateModifyMobileAudit_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('updateModifyMobileAudit failed: unknown result');
};
EPassportEcomAuditServiceClient.prototype.queryModifyMobileAudit = function(req, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_queryModifyMobileAudit(req);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_queryModifyMobileAudit(req);
  }
};

EPassportEcomAuditServiceClient.prototype.send_queryModifyMobileAudit = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('queryModifyMobileAudit', Thrift.MessageType.CALL, this.seqid());
  var args = new EPassportEcomAuditService_queryModifyMobileAudit_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EPassportEcomAuditServiceClient.prototype.recv_queryModifyMobileAudit = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EPassportEcomAuditService_queryModifyMobileAudit_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('queryModifyMobileAudit failed: unknown result');
};
var EPassportEcomAuditServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
EPassportEcomAuditServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

EPassportEcomAuditServiceProcessor.prototype.process_createEcomAudit = function(seqid, input, output) {
  var args = new EPassportEcomAuditService_createEcomAudit_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createEcomAudit.length === 1) {
    Q.fcall(this._handler.createEcomAudit, args.req)
      .then(function(result) {
        var result = new EPassportEcomAuditService_createEcomAudit_result({success: result});
        output.writeMessageBegin("createEcomAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new EPassportEcomAuditService_createEcomAudit_result(err);
        output.writeMessageBegin("createEcomAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.createEcomAudit(args.req,  function (err, result) {
      var result = new EPassportEcomAuditService_createEcomAudit_result((err != null ? err : {success: result}));
      output.writeMessageBegin("createEcomAudit", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

EPassportEcomAuditServiceProcessor.prototype.process_queryEcomAuditList = function(seqid, input, output) {
  var args = new EPassportEcomAuditService_queryEcomAuditList_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.queryEcomAuditList.length === 1) {
    Q.fcall(this._handler.queryEcomAuditList, args.req)
      .then(function(result) {
        var result = new EPassportEcomAuditService_queryEcomAuditList_result({success: result});
        output.writeMessageBegin("queryEcomAuditList", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new EPassportEcomAuditService_queryEcomAuditList_result(err);
        output.writeMessageBegin("queryEcomAuditList", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.queryEcomAuditList(args.req,  function (err, result) {
      var result = new EPassportEcomAuditService_queryEcomAuditList_result((err != null ? err : {success: result}));
      output.writeMessageBegin("queryEcomAuditList", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

EPassportEcomAuditServiceProcessor.prototype.process_queryEcomAuditItem = function(seqid, input, output) {
  var args = new EPassportEcomAuditService_queryEcomAuditItem_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.queryEcomAuditItem.length === 1) {
    Q.fcall(this._handler.queryEcomAuditItem, args.req)
      .then(function(result) {
        var result = new EPassportEcomAuditService_queryEcomAuditItem_result({success: result});
        output.writeMessageBegin("queryEcomAuditItem", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new EPassportEcomAuditService_queryEcomAuditItem_result(err);
        output.writeMessageBegin("queryEcomAuditItem", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.queryEcomAuditItem(args.req,  function (err, result) {
      var result = new EPassportEcomAuditService_queryEcomAuditItem_result((err != null ? err : {success: result}));
      output.writeMessageBegin("queryEcomAuditItem", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

EPassportEcomAuditServiceProcessor.prototype.process_modifyEcomAudit = function(seqid, input, output) {
  var args = new EPassportEcomAuditService_modifyEcomAudit_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.modifyEcomAudit.length === 1) {
    Q.fcall(this._handler.modifyEcomAudit, args.req)
      .then(function(result) {
        var result = new EPassportEcomAuditService_modifyEcomAudit_result({success: result});
        output.writeMessageBegin("modifyEcomAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new EPassportEcomAuditService_modifyEcomAudit_result(err);
        output.writeMessageBegin("modifyEcomAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.modifyEcomAudit(args.req,  function (err, result) {
      var result = new EPassportEcomAuditService_modifyEcomAudit_result((err != null ? err : {success: result}));
      output.writeMessageBegin("modifyEcomAudit", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

EPassportEcomAuditServiceProcessor.prototype.process_createCustomerFindAudit = function(seqid, input, output) {
  var args = new EPassportEcomAuditService_createCustomerFindAudit_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createCustomerFindAudit.length === 1) {
    Q.fcall(this._handler.createCustomerFindAudit, args.req)
      .then(function(result) {
        var result = new EPassportEcomAuditService_createCustomerFindAudit_result({success: result});
        output.writeMessageBegin("createCustomerFindAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new EPassportEcomAuditService_createCustomerFindAudit_result(err);
        output.writeMessageBegin("createCustomerFindAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.createCustomerFindAudit(args.req,  function (err, result) {
      var result = new EPassportEcomAuditService_createCustomerFindAudit_result((err != null ? err : {success: result}));
      output.writeMessageBegin("createCustomerFindAudit", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

EPassportEcomAuditServiceProcessor.prototype.process_queryCustomerFindAudit = function(seqid, input, output) {
  var args = new EPassportEcomAuditService_queryCustomerFindAudit_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.queryCustomerFindAudit.length === 1) {
    Q.fcall(this._handler.queryCustomerFindAudit, args.req)
      .then(function(result) {
        var result = new EPassportEcomAuditService_queryCustomerFindAudit_result({success: result});
        output.writeMessageBegin("queryCustomerFindAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new EPassportEcomAuditService_queryCustomerFindAudit_result(err);
        output.writeMessageBegin("queryCustomerFindAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.queryCustomerFindAudit(args.req,  function (err, result) {
      var result = new EPassportEcomAuditService_queryCustomerFindAudit_result((err != null ? err : {success: result}));
      output.writeMessageBegin("queryCustomerFindAudit", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

EPassportEcomAuditServiceProcessor.prototype.process_createModifyMobileAudit = function(seqid, input, output) {
  var args = new EPassportEcomAuditService_createModifyMobileAudit_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createModifyMobileAudit.length === 1) {
    Q.fcall(this._handler.createModifyMobileAudit, args.req)
      .then(function(result) {
        var result = new EPassportEcomAuditService_createModifyMobileAudit_result({success: result});
        output.writeMessageBegin("createModifyMobileAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new EPassportEcomAuditService_createModifyMobileAudit_result(err);
        output.writeMessageBegin("createModifyMobileAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.createModifyMobileAudit(args.req,  function (err, result) {
      var result = new EPassportEcomAuditService_createModifyMobileAudit_result((err != null ? err : {success: result}));
      output.writeMessageBegin("createModifyMobileAudit", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

EPassportEcomAuditServiceProcessor.prototype.process_updateModifyMobileAudit = function(seqid, input, output) {
  var args = new EPassportEcomAuditService_updateModifyMobileAudit_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.updateModifyMobileAudit.length === 1) {
    Q.fcall(this._handler.updateModifyMobileAudit, args.req)
      .then(function(result) {
        var result = new EPassportEcomAuditService_updateModifyMobileAudit_result({success: result});
        output.writeMessageBegin("updateModifyMobileAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new EPassportEcomAuditService_updateModifyMobileAudit_result(err);
        output.writeMessageBegin("updateModifyMobileAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.updateModifyMobileAudit(args.req,  function (err, result) {
      var result = new EPassportEcomAuditService_updateModifyMobileAudit_result((err != null ? err : {success: result}));
      output.writeMessageBegin("updateModifyMobileAudit", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

EPassportEcomAuditServiceProcessor.prototype.process_queryModifyMobileAudit = function(seqid, input, output) {
  var args = new EPassportEcomAuditService_queryModifyMobileAudit_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.queryModifyMobileAudit.length === 1) {
    Q.fcall(this._handler.queryModifyMobileAudit, args.req)
      .then(function(result) {
        var result = new EPassportEcomAuditService_queryModifyMobileAudit_result({success: result});
        output.writeMessageBegin("queryModifyMobileAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new EPassportEcomAuditService_queryModifyMobileAudit_result(err);
        output.writeMessageBegin("queryModifyMobileAudit", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.queryModifyMobileAudit(args.req,  function (err, result) {
      var result = new EPassportEcomAuditService_queryModifyMobileAudit_result((err != null ? err : {success: result}));
      output.writeMessageBegin("queryModifyMobileAudit", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

